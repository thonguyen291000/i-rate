{"version":3,"sources":["components/Spinner/Spinner.js","redux/actions/userActions.js","redux/types.js","pages/Login.js","components/Banner/StyledBanner.js","components/Banner/Banner.js","components/HomeDescription/HomeDescriptionItem.js","components/HomeDescription/HomeDescription.js","redux/actions/dataAction.js","components/Forms/FormUpdate.js","components/Modals/ModalUpdate.js","components/CardApartment/CardApartment.js","components/HomeApartment/HomeApartment.js","components/SearchResult/SearchResult.js","components/Divider/Divider.js","pages/Home.js","components/Forms/FormAdd.js","components/Modals/ModalAdd.js","components/ListApartment/ListApartment.js","pages/Apartments.js","components/Navigation/Nav.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","theme","root","width","spinner","height","marginLeft","marginRight","Spinner","classes","className","CircularProgress","getUserData","id","dispatch","type","axios","get","then","res","payload","data","catch","err","console","log","setAuthorizationHeader","token","FBidToken","localStorage","setItem","defaults","headers","common","backgroundColor","padding","paddingLeft","paddingRight","breakpoints","down","paper","form","margin","spacing","button","forgotPass","marginTop","customError","color","textAlign","mapActionsToProps","loginUser","userData","post","userId","response","registor","newUserData","history","push","connect","state","user","UI","props","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setType","errors","setErrors","flag","setFlag","useEffect","loading","login","setState","handleChange","event","target","name","value","handleRegistor","e","a","preventDefault","match","handleSubmit","Paper","elevation","Typography","variant","align","noValidate","autoComplete","TextField","error","label","helperText","onChange","Button","endIcon","Send","onClick","href","IconButton","aria-label","StyleBanner","styled","header","img","banner","Banner","useStyles","flexGrow","maxWidth","image","display","maxHeight","content","contentContainer","marginBottom","HomeDescriptionItem","direction","Grid","container","item","xs","sm","dataSet","style","HomeDescription","map","lg","key","getApartments","uploadImage","formData","getOne","clearErrors","FormUpdate","bedrooms","price","furniture","reporter","notes","message","url","uploadedImage","handleUpload","files","updateData","FormData","append","apartment","updateApartment","this","onSubmit","required","CardMedia","media","handleMediaClick","Component","newData","patch","result","withStyles","paddingTop","position","overflow","palette","background","border","boxShadow","shadows","top","left","transform","addIcon","ModalUpdate","React","open","setOpen","body","Tooltip","title","placement","Modal","onClose","cardActions","justifyContent","cardContent","CardApartment","deleteApartment","Card","raised","CardHeader","avatar","Avatar","src","subheader","moment","dateCreate","format","CardContent","CardActions","disableSpacing","hover","opacity","HomeApartment","alignItems","apartments","md","apartmentsFilter","length","Divider","Home","StyledBanner","app","search","SearchResult","FormAdd","credentials","postApartment","ModalAdd","divider","hoverAdd","cursor","ListApartment","Math","random","Apartments","bind","delete","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","navLink","textDecoration","avatarSize","borderRadius","shape","fade","white","up","searchIcon","pointerEvents","inputRoot","inputInput","toolbar","mixins","menuButton","drawerHeader","filter","constraint","useTheme","window","innerWidth","setWidth","handleLogout","removeItem","handleDrawerClose","updateWidthAndHeight","addEventListener","removeEventListener","CssBaseline","AppBar","clsx","Toolbar","edge","justify","noWrap","InputBase","placeholder","input","inputProps","Drawer","anchor","alt","List","text","index","to","ListItem","ListItemIcon","ListItemText","primary","initialState","authenticated","middleware","thunk","reducers","combineReducers","action","findIndex","splice","sort","b","store","createStore","compose","applyMiddleware","baseURL","jwtDecode","exp","Date","now","location","App","undefined","contentShift","exact","path","component","render","Boolean","hostname","renderReactDom","ReactDOM","StrictMode","document","getElementById","cordova","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5347d982.chunk.js","sourcesContent":["import React from 'react';\r\n// MUI\r\nimport {CircularProgress } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\" ,\r\n    },\r\n    spinner: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        marginLeft: \"47%\",\r\n        marginRight: \"47%\"\r\n    }\r\n}))\r\n\r\nconst Spinner = () => {\r\n    const classes = styles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress className={classes.spinner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner; \r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, STOP_LOADING_UI } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n            .then(res => {\r\n                localStorage.userId = res.data.id;\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n};\r\n\r\nexport const registor = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/registor', newUserData)\r\n            .then(res => {\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n                history.push('/');\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBidToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get(`/user/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const uploadImage = (id, formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post(`/user/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getUserData(id));\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBidToken =  `Bearer ${token}`;\r\n    localStorage.setItem('FBidToken', FBidToken);\r\n    axios.defaults.headers.common['Authorization'] = FBidToken;\r\n}","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_APARTMENTS = 'SET_APARTMENTS';\r\nexport const SET_APARTMENT = 'SET_APARTMENT';\r\nexport const FILTER_APARTMENTS = 'FILTER_APARTMENTS';\r\nexport const POST_APARTMENT = 'POST_APARTMENT';\r\nexport const DELETE_APARTMENT = 'DELETE_APARTMENT';\r\nexport const UPDATE_APARTMENT = 'UPDATE_APARTMENT';","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Paper, Typography, Divider, TextField, Button, IconButton } from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../components/Spinner/Spinner';\r\n// Redux stuff\r\nimport { loginUser, registor } from '../redux/actions/userActions';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport {Send as SendIcon, PersonAdd as RegistorIcon, LockOpen as LoginIcon} from '@material-ui/icons';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#bbdefb\",\r\n        padding: \"5rem\",\r\n        paddingLeft: \"15rem\",\r\n        paddingRight: \"15rem\",\r\n        height: \"95vh\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: \"1rem\",\r\n        }\r\n    },\r\n    paper: {\r\n        padding: \"5%\",\r\n    },\r\n    form: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n          },\r\n        padding: \"5vh\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width:\"20%\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"40%\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"36%\",\r\n            marginLeft: \"32%\",\r\n            marginRight: \"32%\",\r\n        }\r\n    },\r\n    forgotPass: {\r\n        marginTop: \"-3%\",\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        textAlign: \"center\",\r\n        marginTop: 10\r\n    },\r\n    spinner: {\r\n        marginLeft: 0,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginLeft: \"-5%\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst Login = (props) => {\r\n\r\n    // Set states\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('login');\r\n    const [errors, setErrors] = useState({});\r\n    const [flag, setFlag] = useState('Initial render');\r\n\r\n    const classes = styles();\r\n\r\n    // Life cycle to set errors when logining\r\n    useEffect(() => {\r\n        if(flag !== 'Initial render') {\r\n            if(!props.UI.loading){\r\n                if(props.UI.errors !== null) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        login: props.UI.errors\r\n                    });\r\n                } else {\r\n                    // Set state of login to go to home page\r\n                    props.login.setState({\r\n                        ...props.login.state,\r\n                        login: true\r\n                    });\r\n                }\r\n            }\r\n        }   \r\n    }, [props.UI])\r\n\r\n    // Get data from typing\r\n    const handleChange = (event) => {\r\n        switch(event.target.name) {\r\n            case \"email\": \r\n                setEmail(event.target.value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(event.target.value);\r\n                break;\r\n            case \"confirmPassword\":\r\n                setConfirmPassword(event.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors({});\r\n    }\r\n\r\n    const handleRegistor = async (e) => {\r\n        e.preventDefault();\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                    confirmPassword: confirmPassword\r\n                };\r\n                setFlag('Not initial render');\r\n                await props.loginUser(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Action when submiting\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                };\r\n                setFlag('Not initial render');\r\n                await props.loginUser(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Change login screen or registor screen\r\n    const clickLogin = (e) => {\r\n        e.preventDefault();\r\n        setType(\"login\");\r\n    }\r\n\r\n    const clickRegistor = () => {\r\n        setType(\"registor\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Typography variant=\"h4\" \r\n                    align=\"center\">\r\n                        RentalZ\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" \r\n                    align=\"center\">\r\n                        Place to rend apartments\r\n                </Typography>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Login or Registor */}\r\n                {type === \"login\" ? (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n                            \r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                className={classes.button}\r\n                                endIcon={<SendIcon/>}\r\n                                onClick={handleSubmit}>\r\n                                Login\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography className={classes.forgotPass}\r\n                            variant=\"subtitle1\" \r\n                            align=\"center\">\r\n                                Forgot password? <a href=\"#\">\r\n                                    Click here\r\n                                </a>\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Don't have an account? \r\n                                <IconButton aria-label=\"Registor\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickRegistor}>\r\n                                        <RegistorIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n\r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <TextField name=\"confirmPassword\" \r\n                                label=\"Confirm password\" \r\n                                type=\"password\" \r\n                                variant=\"outlined\" \r\n                                onChange={handleChange}\r\n                            />\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                endIcon={<RegistorIcon/>}\r\n                                onClick={handleRegistor}\r\n                                type=\"submit\">\r\n                                Registor\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Had an account? \r\n                                <IconButton aria-label=\"Login\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickLogin}>\r\n                                        <LoginIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Check type of data\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    registor: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    loginUser,\r\n    registor\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst StyleBanner = styled.header`\r\n    min-height: 40vh;\r\n    background: url(${props => props.img}) center/cover no-repeat;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default StyleBanner;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles(theme => ({\r\n    banner: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Banner = () => {\r\n    const classes = styles();\r\n\r\n    return (\r\n        <div className={classes.banner}>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n    backgroundColor: \"transparent\",\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 400\r\n    },\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        width: 110,\r\n        height: 110,\r\n    }\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  content: {\r\n      textAlign: \"justify\"\r\n  },\r\n  contentContainer: {\r\n      marginTop: \"auto\",\r\n      marginBottom: \"auto\"\r\n  }\r\n}));\r\n\r\nconst HomeDescriptionItem = ({ content, img, direction }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper className={classes.paper} \r\n        elevation={0}>\r\n\r\n          <Grid container \r\n            spacing={2} \r\n            direction={direction}>\r\n\r\n              <Grid item \r\n                xs={12} sm={5} \r\n                align=\"center\">\r\n                  {img}\r\n              </Grid>\r\n\r\n              <Grid item \r\n                xs={12} sm={7}  \r\n                className={classes.contentContainer}>\r\n                    <Typography variant=\"body2\" \r\n                      className={classes.content}>\r\n                        {content}\r\n                    </Typography>\r\n              </Grid>\r\n\r\n          </Grid>\r\n          \r\n      </Paper>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeDescriptionItem;","import React from 'react';\r\n// MUI\r\nimport {Grid} from '@material-ui/core';\r\n// Components\r\nimport HomeDescriptionItem from './HomeDescriptionItem';\r\n// Icons\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\n\r\nconst dataSet = {\r\n    data:[\r\n        {\r\n            content: \"Lorem ipsum dolor, it amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <RoomIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consecttur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <PaymentIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <ForumIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst HomeDescription = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                    {dataSet.data.map(item => (\r\n                        <Grid item \r\n                            xs={12} lg={4} \r\n                            key={item.content}>\r\n                                <HomeDescriptionItem content={item.content} \r\n                                    direction={item.direction} \r\n                                    img={item.img}\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomeDescription;\r\n","import { SET_APARTMENTS, SET_APARTMENT, FILTER_APARTMENTS, POST_APARTMENT, UPDATE_APARTMENT, DELETE_APARTMENT, LOADING_DATA, STOP_LOADING_UI, LOADING_UI, SET_ERRORS, CLEAR_ERRORS } from '../types';\r\nimport axios from 'axios';\r\n\r\n// // Get all screams\r\nexport const getApartments = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/apartments')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_APARTMENTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_APARTMENTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Post an apartment\r\nexport const postApartment = (newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.post('/apartment', newData)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: POST_APARTMENT,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\n// Delete an apartment\r\nexport const deleteApartment = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.delete(`/apartment/${id}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_APARTMENT, payload: id })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//Update an apartment\r\nexport const updateApartment = (id, newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.patch(`/apartment/${id}`, newData)\r\n        .then(res => {\r\n            const result = {\r\n                apartment : {\r\n                    ...res.data.apartment,\r\n                    id: id,\r\n                },\r\n                message: \"Update successfully!\"\r\n            }\r\n            dispatch({\r\n                type: UPDATE_APARTMENT,\r\n                payload: result\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: \"Update failed!\"\r\n            })\r\n        })  \r\n}\r\n\r\n//Filter\r\nexport const filter = (constraint) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/apartmentsFilter/${constraint}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FILTER_APARTMENTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: FILTER_APARTMENTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Load image\r\nexport const uploadImage = (formData, id) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post(`/apartment/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getOne(id));\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getOne = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/apartment/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_APARTMENT,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, CardMedia, Typography } from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\n// Redux stuff\r\nimport { getOne, uploadImage, updateApartment, getApartments } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n      width: '100%',\r\n    },\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '45%',\r\n  }\r\n});\r\n\r\nclass FormUpdate extends Component {\r\n    \r\n    state = {\r\n        type: \"\",\r\n        bedrooms: \"\",\r\n        price: 0,\r\n        furniture: \"\",\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        message: \"\",\r\n        url: null,\r\n        uploadedImage: null,\r\n        errors: {},\r\n    }\r\n\r\n    // Set data initially\r\n    componentDidMount() {\r\n        const {apartment} = this.props;\r\n        \r\n        this.setState({\r\n            ...this.state,\r\n            type: apartment.type,\r\n            bedrooms: apartment.bedrooms,\r\n            price: apartment.price,\r\n            furniture: apartment.furniture,\r\n            reporter: apartment.reporter,\r\n            notes: apartment.notes,\r\n            url: apartment.url\r\n        });\r\n    }\r\n\r\n    // Get data from typing\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    // Handle uploading\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        this.setState({\r\n            ...this.state,\r\n            uploadedImage: image\r\n        })\r\n    }\r\n\r\n    // Handle submiting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n        // Check constraints\r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\"\r\n        } else \r\n        if(this.state.bedrooms === \"\") {\r\n            errors.bedrooms = \"Bedrooms is required!\"\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\"\r\n        }\r\n        if(this.state.reporter === \"\") {\r\n            errors.reporter = \"Reporter is required!\"\r\n        }\r\n\r\n        if(errors.type || errors.bedrooms || errors.price || errors.reporter){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const updateData = {\r\n                type: this.state.type,\r\n                bedrooms: this.state.bedrooms,\r\n                price: this.state.price,\r\n                furniture: this.state.furniture,\r\n                reporter: this.state.reporter,\r\n                notes: this.state.notes,\r\n                url: this.state.url\r\n            };\r\n            console.log(this.props.UI);\r\n            // Check if user change image\r\n            if(this.state.uploadedImage !== null) {\r\n                const formData = new FormData();\r\n                formData.append('image', this.state.uploadedImage, this.state.uploadedImage.name);\r\n                this.props.uploadImage(formData, this.props.apartment.id);\r\n            }\r\n           \r\n            // Start updating\r\n            this.props.updateApartment(this.props.apartment.id, updateData);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.UI);\r\n        const {classes} = this.props;\r\n\r\n        // Check if data load completely\r\n        if(this.props.data.loading) {\r\n            return (\r\n                <Spinner/>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                {this.props.data.message === \"Update successfully!\" && <Typography variant=\"h5\" align=\"center\" color=\"secondary\">{this.props.data.message}</Typography>}\r\n                <form className={classes.form} \r\n                    noValidate \r\n                    autoComplete=\"off\" \r\n                    onSubmit={this.handleSubmit}>\r\n                        {this.state.errors.type ? (\r\n                            <TextField name=\"type\" \r\n                                error \r\n                                helperText={this.state.errors.type} \r\n                                required \r\n                                label=\"1. Type\" \r\n                                variant=\"filled\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"type\" \r\n                                required \r\n                                label=\"1. Type\" \r\n                                variant=\"filled\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.bedrooms ? (\r\n                            <TextField name=\"bedrooms\" \r\n                                error \r\n                                helperText={this.state.errors.bedrooms} \r\n                                required \r\n                                label=\"2. Bedrooms\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.bedrooms}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"bedrooms\" \r\n                                required \r\n                                label=\"2. Bedrooms\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.bedrooms}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.price ? (\r\n                            <TextField name=\"price\" \r\n                                error \r\n                                helperText={this.state.errors.price}  \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"3. Price\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"price\" \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"3. Price\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField name=\"furniture\" \r\n                            label=\"4. Furniture\" \r\n                            variant=\"filled\"  \r\n                            onChange={this.handleChange} \r\n                            value={this.state.furniture}\r\n                        />\r\n\r\n                        {this.state.errors.reporter ? (\r\n                            <TextField name=\"reporter\" \r\n                                error \r\n                                helperText={this.state.errors.reporter} \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"reporter\" \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"filled\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField name=\"notes\" \r\n                            label=\"6. Notes\" \r\n                            variant=\"filled\"  \r\n                            onChange={this.handleChange} \r\n                            value={this.state.notes && this.state.notes}                           \r\n                        />\r\n\r\n\r\n                        {this.state.url !== null && (\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={this.state.url}\r\n                                onClick={this.handleMediaClick}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField type=\"file\" \r\n                            name=\"image\" \r\n                            onChange={this.handleUpload}\r\n                        />\r\n\r\n                        <Button type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\">\r\n                                Update\r\n                        </Button>\r\n                        {/* Message and spinner */}\r\n                        {this.props.data.loading && <Spinner/>}\r\n                        {this.props.UI.errors && \r\n                            <h2>\r\n                                Update failed!\r\n                            </h2>}\r\n\r\n                </form>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n// Check type of data\r\nFormUpdate.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    getOne: PropTypes.func.isRequired,\r\n    updateApartment: PropTypes.func.isRequired,\r\n    getApartments: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getOne,\r\n    updateApartment,\r\n    uploadImage,\r\n    getApartments\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormUpdate));","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormUpdate from '../Forms/FormUpdate';\r\n// Icon\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\"\r\n  },\r\n}));\r\n\r\nconst ModalUpdate = ({apartment}) => {\r\n  const classes = useStyles();\r\n  //Set state\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Update an apartment\r\n        </Typography>\r\n      <FormUpdate apartment={apartment}/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Update and note\" placement=\"top\">\r\n        <IconButton aria-label=\"update\" \r\n          color=\"primary\" \r\n          onClick={handleOpen}>\r\n            <UpdateIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalUpdate;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// Date handler\r\nimport moment from 'moment';\r\n// MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Components\r\nimport ModalUpdate from '../Modals/ModalUpdate';\r\n// icons\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardActions: {\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  cardContent: {\r\n    height: \"350px\"\r\n  }\r\n}));\r\n\r\nconst CardApartment = ({apartment, flag, deleteApartment}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  // Delete apartment\r\n  const handleDelete = () => {\r\n    deleteApartment(apartment.id);\r\n  }\r\n\r\n  // Check apartment card shows for which page\r\n  if(apartment) {\r\n    return (\r\n      <Card className={classes.root} \r\n        raised>\r\n        {/* Header */}\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"/>\r\n          }\r\n          title={apartment.type}\r\n          subheader={moment(apartment.dateCreate).format('DD/MM/YYYY')}\r\n        />\r\n        {/* Picture */}\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={apartment.url}\r\n        />\r\n        {/* Content */}\r\n        <CardContent className={classes.cardContent}>\r\n\r\n          <Typography variant=\"h6\">\r\n            Details\r\n          </Typography>\r\n            \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Type: {apartment.type}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Bedrooms: {apartment.bedrooms}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Price: {apartment.price}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Furniture type: {apartment.furniture}\r\n          </Typography>\r\n    \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Reporter: {apartment.reporter}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Created date: {moment(apartment.dateCreate).format('DD/MM/YYYY')}\r\n          </Typography>\r\n          \r\n          {apartment.notes !== \"Empty\" && (\r\n            <Typography variant=\"subtitle2\" \r\n              color=\"secondary\">\r\n                &nbsp;<i>*Note: {apartment.notes}</i>\r\n            </Typography>\r\n          )}\r\n\r\n        </CardContent>\r\n\r\n        {/* Actions */}\r\n        {flag === \"apartments\" && (\r\n          <CardActions className={classes.cardActions} \r\n                disableSpacing>\r\n\r\n            <ModalUpdate apartment={apartment}/>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <IconButton aria-label=\"delete\" \r\n                  color=\"secondary\" \r\n                  onClick={handleDelete}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardApartment;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardApartment from \"../CardApartment/CardApartment\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst HomeApartment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    New Rent Apartments\r\n            </Typography>\r\n            <br/>\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show apartments */}\r\n                    {props.apartments.map(apartment => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4}   \r\n                            className={classes.hover} \r\n                            key={apartment.id}>\r\n                                <CardApartment apartment={apartment} \r\n                                    flag=\"home\"\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeApartment;\r\n","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardApartment from \"../CardApartment/CardApartment\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#3f51b5\",\r\n        padding: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    title: {\r\n        color: \"white\"\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst HomeApartment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\"\r\n                className={classes.title}>\r\n                    Search result\r\n            </Typography>\r\n\r\n            <br/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n\r\n                    {props.loading && <Spinner/>}\r\n\r\n                    {/* Show apartment */}\r\n                    {props.apartmentsFilter.length !== 0 && props.apartmentsFilter.map(apartment => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={apartment.id}>\r\n\r\n                                <CardApartment apartment={apartment} \r\n                                    flag=\"apartments\"\r\n                                />\r\n\r\n                        </Grid>\r\n                    ))}\r\n\r\n                    {props.apartmentsFilter.length === 0 && \r\n                        <h3 style={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\", \r\n                            color: \"white\"\r\n                            }}>\r\n                                No matched results\r\n                        </h3>}\r\n            </Grid>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeApartment;\r\n","import React from 'react';\r\n// MUI\r\nimport { Divider as DividerMUI } from '@material-ui/core';\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <DividerMUI style={{marginTop: \"3rem\", marginBottom: \"3rem\"}}/>\r\n    )\r\n}\r\n\r\nexport default Divider;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport HomeDescription from '../components/HomeDescription/HomeDescription';\r\nimport HomeApartment from '../components/HomeApartment/HomeApartment';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getApartments } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getApartments();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/homeBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult apartmentsFilter={this.props.data.apartmentsFilter} \r\n                            loading={this.props.data.loading}\r\n                        />\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <HomeDescription/>\r\n\r\n                <Divider/>\r\n\r\n                <HomeApartment apartments={this.props.data.apartments} \r\n                    loading={this.props.data.loading}\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nHome.propTypes = {\r\n    getApartments: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getApartments\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, Typography} from '@material-ui/core';\r\n//Components\r\nimport Spinner from '../Spinner/Spinner';\r\n// Redux stuff\r\nimport { postApartment, uploadImage } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n  customError: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    marginTop: 10\r\n  }\r\n});\r\n\r\nclass FormAdd extends Component {\r\n    state = {\r\n        type: \"\",\r\n        bedrooms: \"\",\r\n        price: 0,\r\n        furniture: \"\",\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        url: \"\",\r\n        message: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    // Get errors after adding\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            ...this.state,\r\n            message: this.props.data.message\r\n        })\r\n    }\r\n\r\n    // Get data from typing to state\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    // Upload image\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData, this.props.data.apartments[this.props.data.apartments.length-1].apartment.id);\r\n    }\r\n\r\n    // Handle submiting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errors = {};\r\n        // Check constraints\r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\"\r\n        } else \r\n        if(this.state.bedrooms === \"\") {\r\n            errors.bedrooms = \"Bedrooms is required!\"\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\"\r\n        }\r\n        if(this.state.reporter === \"\") {\r\n            errors.reporter = \"Reporter is required!\"\r\n        }\r\n\r\n        if(errors !== {}){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const newData = {\r\n                type: this.state.type,\r\n                bedrooms: this.state.bedrooms,\r\n                price: this.state.price,\r\n                furniture: this.state.furniture,\r\n                reporter: this.props.user.credentials.email,\r\n                notes: this.state.notes\r\n            };\r\n            // Start adding\r\n            this.props.postApartment(newData);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <form className={classes.form} \r\n                noValidate \r\n                autoComplete=\"off\" \r\n                onSubmit={this.handleSubmit}>\r\n\r\n                    {this.state.errors.type ? (\r\n                        <TextField error \r\n                            name=\"type\" \r\n                            helperText={this.state.errors.type} \r\n                            required label=\"1. Type\" \r\n                            variant=\"filled\" \r\n                            onChange={this.handleChange}    \r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"type\" \r\n                            required label=\"1. Type\" \r\n                            variant=\"filled\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.bedrooms ? (\r\n                        <TextField error \r\n                            name=\"bedrooms\" \r\n                            helperText={this.state.errors.bedrooms} \r\n                            required \r\n                            label=\"2. Bedrooms\" \r\n                            variant=\"filled\"  \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"bedrooms\" \r\n                            required \r\n                            label=\"2. Bedrooms\" \r\n                            variant=\"filled\"  \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.price ? (\r\n                        <TextField error \r\n                            name=\"price\" \r\n                            type=\"number\" \r\n                            helperText={this.state.errors.price} \r\n                            required \r\n                            label=\"3. Price\" \r\n                            variant=\"filled\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"price\" \r\n                            type=\"number\" \r\n                            required \r\n                            label=\"3. Price\" \r\n                            variant=\"filled\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    <TextField name=\"furniture\" \r\n                        label=\"4. Furniture\" \r\n                        variant=\"filled\"  \r\n                        onChange={this.handleChange}\r\n                    />\r\n\r\n                    {this.state.errors.reporter ? (\r\n                        <TextField error \r\n                            name=\"reporter\" \r\n                            helperText={this.state.errors.reporter} \r\n                            required \r\n                            label=\"5. Reporter\" \r\n                            variant=\"filled\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"reporter\" \r\n                            required \r\n                            label=\"5. Reporter\" \r\n                            variant=\"filled\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    <Button type=\"submit\" \r\n                        variant=\"contained\" \r\n                        color=\"primary\">\r\n                            Create information\r\n                    </Button>\r\n                    {/* Message and spinner */}\r\n                    {this.state.message && (\r\n                        <>\r\n                            <Typography>\r\n                                Add apartment image:\r\n                            </Typography>\r\n                            <TextField type=\"file\" \r\n                                name=\"image\" \r\n                                onChange={this.handleUpload}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {this.state.message === \"Loaded image\" && (\r\n                        <Typography variant=\"body2\" \r\n                            className={classes.customError}>\r\n                                {this.state.message}\r\n                        </Typography>\r\n                    )}\r\n                    {this.props.data.loading && <Spinner/>}\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n// Check type of data\r\nFormAdd.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    postApartment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    postApartment,\r\n    uploadImage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormAdd));","import React from 'react';\r\n//MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormAdd from '../Forms/FormAdd';\r\n//Icon\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\",\r\n  }\r\n}));\r\n\r\nconst ModalAdd = () => {\r\n  const classes = useStyles();\r\n\r\n  // Set state\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Create an apartment\r\n      </Typography>\r\n      <FormAdd/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add more\">\r\n        <AddIcon className={classes.addIcon} \r\n          onClick={handleOpen}\r\n        />\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAdd;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography, Tooltip} from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\nimport CardApartment from \"../CardApartment/CardApartment\";\r\nimport ModalAdd from \"../Modals/ModalAdd\";\r\nimport Divider from \"../Divider/Divider\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: \"2%\"\r\n    },\r\n    divider: {\r\n        marginBottom: \"1rem\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    hoverAdd: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n            cursor: \"pointer\"\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    },\r\n    addIcon: {\r\n        width: \"40%\",\r\n        height: \"40%\",\r\n        margin: \"30%\"\r\n    }\r\n  }));\r\n  \r\nconst ListApartment = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    Rent Apartments\r\n            </Typography>\r\n\r\n            <Divider className={classes.divider}/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n\r\n                    <Grid item \r\n                        xs={12} md={6} lg={4} \r\n                        className={classes.hoverAdd} >\r\n                            <Tooltip title=\"Add more\">\r\n                                <>\r\n                                    <ModalAdd/>\r\n                                </>\r\n                            </Tooltip>\r\n                    </Grid>\r\n\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show apartments */}\r\n                    {props.apartments.map(apartment => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={apartment.id+Math.random()}>\r\n\r\n                                <CardApartment apartment={apartment} \r\n                                    flag=\"apartments\" \r\n                                    deleteApartment={props.deleteApartment}\r\n\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListApartment;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport ListApartment from '../components/ListApartment/ListApartment';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getApartments, deleteApartment } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Apartments extends Component {\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getApartments();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/apartmentBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n\r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult apartmentsFilter={this.props.data.apartmentsFilter}/>\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <ListApartment apartments={this.props.data.apartments} \r\n                    loading={this.props.data.loading} \r\n                    deleteApartment={this.props.deleteApartment.bind(this)}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nApartments.propTypes = {\r\n    getApartments: PropTypes.func.isRequired,\r\n    deleteApartment: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getApartments,\r\n    deleteApartment\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Apartments);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\n// MUI\r\nimport clsx from 'clsx';\r\nimport {Drawer, CssBaseline, AppBar, Toolbar, \r\n  List, Typography, Divider, ListItem, ListItemIcon, \r\n  ListItemText, InputBase, IconButton} from \"@material-ui/core\";\r\nimport { fade, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\n// Redux stuff\r\nimport {getUserData} from '../../redux/actions/userActions';\r\nimport {filter} from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// Width of drawer menu\r\nconst drawerWidth = 240;\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\"\r\n  },\r\n  avatarSize: {\r\n    height: theme.spacing(7),\r\n    width: theme.spacing(7)\r\n  },\r\n  divider: {\r\n    background: \"blue\"\r\n  },\r\n  // All for search\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    // Add more when screen up 600\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '8ch',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch'\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  // Add more when screen up 960\r\n  [theme.breakpoints.up('md')]: {\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    }\r\n  },\r\n}));\r\n\r\nconst Nav = (props) => {\r\n\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n\r\n  // Set states\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    //Delete variable on local storage\r\n    localStorage.removeItem('FBidToken');\r\n    localStorage.removeItem('userId');\r\n    \r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      login: false\r\n    });\r\n  }\r\n\r\n  // Open menu\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n\r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: true\r\n    });\r\n  };\r\n\r\n  // Close menu\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n     // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  // Get width auto\r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  //Search\r\n  const handleChangeSearch = (e) => {\r\n    let constraint = e.target.value;\r\n    if(constraint !== \"\"){\r\n      props.filter(constraint);\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: true\r\n      })\r\n    } else {\r\n      props.data.apartmentsFilter = [];\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: false\r\n      })\r\n    }\r\n  }\r\n\r\n  // Use for rendering auto when screen size changes\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Use to match the content to the app bar exactly */}\r\n      <CssBaseline /> \r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n          <Toolbar>\r\n            {/* Burger button */}\r\n            {window.innerWidth <= 960 && (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}>\r\n                  <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            {/* Title */}\r\n            <Grid container \r\n              justify=\"space-between\" \r\n              alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" \r\n                    noWrap \r\n                    align=\"center\">\r\n                      RentalZ\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* Search field */}\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                      name=\"search\"\r\n                      onChange={handleChangeSearch}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n      </AppBar>\r\n      {/* Drawer */}\r\n      {window.innerWidth > 960 ? /* Drawer for laptop */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open >\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container\r\n                item xs={4}  \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\" \r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Typography>\r\n                      Hello, {props.user.credentials.email}\r\n                    </Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Apartments\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/apartments\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink} \r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      ) : /* Drawer for tablet */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open={open}>\r\n            <div className={classes.drawerHeader}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container \r\n                item xs={4} \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"\r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography>\r\n                    Hello, {props.user.credentials.email}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Apartments\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/apartments\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink}\r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n// Check type of data\r\nNav.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n  getUserData,\r\n  filter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Nav);\r\n","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return{\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER: \r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: false,\r\n                credentials: action.payload,\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_APARTMENT, SET_APARTMENTS, POST_APARTMENT, DELETE_APARTMENT, LOADING_DATA, UPDATE_APARTMENT, FILTER_APARTMENTS} from '../types';\r\n\r\nconst initialState = {\r\n    apartments: [],\r\n    apartmentsFilter: [],\r\n    apartment: {},\r\n    loading: false,\r\n    message: \"\",\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    let index;\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_APARTMENTS:\r\n            return {\r\n                ...state,\r\n                apartments: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_APARTMENT: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: \"Loaded image\",\r\n                apartment: action.payload\r\n            }\r\n        case FILTER_APARTMENTS:\r\n            return {\r\n                ...state,\r\n                apartmentsFilter: action.payload,\r\n                loading: false\r\n            }\r\n        case POST_APARTMENT:\r\n            state.apartments.push(action.payload);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n        case UPDATE_APARTMENT: \r\n            index = state.apartments.findIndex(apartment => apartment.id === action.payload.apartment.id);\r\n            state.apartments.splice(index, 1);\r\n            state.apartments.push(action.payload.apartment);\r\n           \r\n            // Sort by date\r\n            state.apartments.sort((a, b) => (a.dateCreate < b.dateCreate) ? 1 : (a.dateCreate === b.dateCreate) ? ((a.type > b.type) ? 1 : -1) : -1 )\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                apartmentsFilter: [],\r\n                message: action.payload.message\r\n            }\r\n        case DELETE_APARTMENT:\r\n            index = state.apartments.findIndex(apartment => apartment.id === action.payload);\r\n            state.apartments.splice(index, 1);\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload.message\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState, \r\n    compose(applyMiddleware(...middleware), \r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\nimport {BrowserRouter, Switch, Redirect, Route} from \"react-router-dom\";\nimport \"./App.css\";\n// MUI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\n// Components\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Apartments from \"./pages/Apartments\";\nimport Nav from \"./components/Navigation/Nav\";\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n// Middleware\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\n// Set base url to connect API\naxios.defaults.baseURL= \"https://app-rentalz.herokuapp.com/\";\n\n// Token\nconst token = localStorage.FBidToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    window.location.href='/login';\n    store.dispatch(logoutUser());\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData(localStorage.userId));\n  }\n}\n\n// Css-in-react\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n    overflow: \"hidden\"\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: \"rgba(0, 0, 0.08, 0.08)\",\n\n  },\n  // Add more when screen down 960\n  [theme.breakpoints.down('sm')]: {\n    content: {\n      flexGrow: 1,\n\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -240,\n    },\n    // Content should longer or shorter\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }\n  }\n});\n\nclass App extends Component {\n  \n  state = {\n    // open to assign to contentShift => false mean drawer close and then main content longer\n    open: false,\n    // Get from login\n    login: false \n  }\n  componentDidMount() {\n    // Check condition to re-render when login or logout\n    if(localStorage.FBidToken === undefined) {\n      this.setState({\n        ...this.state,\n        login: false\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        login: true\n      });\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        {this.state.login ? (\n          <> \n            <div className={classes.root}>\n              {/* Assign this to setState in Nav => render 2 times*/}\n              <Nav app={this}/>\n              <main  className={clsx(classes.content, {\n                [classes.contentShift]: this.state.open,\n              })}>\n                <div className={classes.toolbar} />\n                  <Switch>\n                    <Redirect exact path=\"/\" to=\"/home\"/>\n                    <Redirect exact path=\"/login\" to=\"/home\"/>\n                    <Route path=\"/home\" exact component={(...props) => <Home app={this}/>}/>\n                    <Route path=\"/apartments\" exact component={(...props) => <Apartments app={this}/>}/>\n                  </Switch>\n              </main>\n            </div>\n          </>\n        ) : (\n          <>\n            <Redirect exact path=\"/\" to=\"/login\"/>\n            <Route path=\"/login\" exact render={(...props) => <Login login={this}/>} />\n          </>\n        )}\n        </BrowserRouter>\n      </Provider> \n    )\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n\tReactDOM.render(\n\t  <React.StrictMode>\n\t\t<App />\n\t  </React.StrictMode>,\n\t  document.getElementById('root')\n\t);\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}