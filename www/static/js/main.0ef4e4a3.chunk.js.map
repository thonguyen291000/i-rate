{"version":3,"sources":["components/Spinner/Spinner.js","redux/actions/userActions.js","redux/types.js","pages/Login.js","components/Banner/StyledBanner.js","components/Banner/Banner.js","components/HomeDescription/HomeDescriptionItem.js","components/HomeDescription/HomeDescription.js","redux/actions/dataAction.js","components/Forms/FormUpdate.js","components/Modals/ModalUpdate.js","components/CardRestaurant/CardRestaurant.js","components/HomeRestaurant/HomeRestaurant.js","components/SearchResult/SearchResult.js","components/Divider/Divider.js","pages/Home.js","components/Forms/FormAdd.js","components/Modals/ModalAdd.js","components/ListRestaurant/ListRestaurant.js","pages/Restaurants.js","components/Navigation/Nav.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["styles","makeStyles","theme","root","width","spinner","height","marginLeft","marginRight","Spinner","classes","className","CircularProgress","getUserData","id","dispatch","type","axios","get","then","res","payload","data","catch","err","console","log","setAuthorizationHeader","token","FBidToken","localStorage","setItem","defaults","headers","common","background","padding","paddingLeft","paddingRight","breakpoints","down","paper","form","margin","spacing","button","forgotPass","marginTop","customError","color","textAlign","mapActionsToProps","loginUser","userData","post","userId","response","registor","newUserData","history","push","connect","state","user","UI","props","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setType","errors","setErrors","flag","setFlag","useEffect","loading","login","setState","handleChange","event","target","name","value","Paper","elevation","Typography","variant","align","noValidate","autoComplete","TextField","error","label","helperText","onChange","Button","endIcon","Send","onClick","e","preventDefault","match","href","IconButton","aria-label","StyleBanner","styled","header","img","banner","Banner","useStyles","flexGrow","maxWidth","backgroundColor","image","display","maxHeight","content","contentContainer","marginBottom","HomeDescriptionItem","direction","Grid","container","item","xs","sm","dataSet","style","HomeDescription","map","lg","key","getRestaurants","uploadImage","formData","getOne","clearErrors","labels","0","1","2","3","4","5","FormUpdate","visitDate","price","reporter","notes","message","url","uploadedImage","valueService","hoverService","valueCleanliness","hoverCleanliness","valueFood","hoverFood","handleChangeRating","newValue","handleChangeActive","newHover","handleUpload","files","handleSubmit","serviceRating","cleanlinessRating","foodQualityRating","updateData","credentials","FormData","append","restaurant","updateRestaurant","this","positionRating","i","service","cleanliness","food","onSubmit","required","htmlFor","labelRating","contentRating","Rating","precision","onChangeActive","Box","ml","resultRating","CardMedia","media","handleMediaClick","Component","newData","patch","result","withStyles","paddingTop","fontSize","fontWeight","position","overflow","palette","border","boxShadow","shadows","top","left","transform","addIcon","ModalUpdate","open","setOpen","body","Tooltip","title","placement","Modal","onClose","cardActions","justifyContent","cardContent","CardRestaurant","deleteRestaurant","Card","raised","CardHeader","avatar","Avatar","src","subheader","moment","dateCreate","format","CardContent","CardActions","disableSpacing","hover","opacity","HomeRestaurant","alignItems","restaurants","md","SearchResult","restaurantsFilter","length","Divider","Home","StyledBanner","app","search","FormAdd","count","createdDate","Date","toISOString","postRestaurant","closeModel","InputLabelProps","shrink","ModalAdd","handleClose","divider","hoverAdd","cursor","ListRestaurant","Math","random","Apartments","bind","delete","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","navLink","textDecoration","avatarSize","borderRadius","shape","fade","white","up","searchIcon","pointerEvents","inputRoot","inputInput","toolbar","mixins","menuButton","drawerHeader","filter","constraint","useTheme","window","innerWidth","setWidth","handleLogout","removeItem","iconClose","document","getElementById","click","handleDrawerClose","updateWidthAndHeight","addEventListener","removeEventListener","CssBaseline","AppBar","clsx","Toolbar","edge","justify","noWrap","InputBase","placeholder","input","inputProps","toLowerCase","Drawer","anchor","alt","List","text","index","to","ListItem","ListItemIcon","ListItemText","primary","initialState","authenticated","middleware","thunk","reducers","combineReducers","action","findIndex","splice","sort","a","b","store","createStore","compose","applyMiddleware","baseURL","jwtDecode","exp","now","App","undefined","contentShift","exact","path","component","Restaurants","render","Boolean","location","hostname","renderReactDom","ReactDOM","StrictMode","cordova","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ef4e4a3.chunk.js","sourcesContent":["import React from 'react';\r\n// MUI\r\nimport {CircularProgress } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\" ,\r\n    },\r\n    spinner: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n        marginLeft: \"47%\",\r\n        marginRight: \"47%\"\r\n    }\r\n}))\r\n\r\nconst Spinner = () => {\r\n    const classes = styles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress className={classes.spinner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner; \r\n","import { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, STOP_LOADING_UI } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n            .then(res => {\r\n                localStorage.userId = res.data.id;\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS,\r\n                    payload: err.response\r\n                });\r\n            });\r\n};\r\n\r\nexport const registor = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/registor', newUserData)\r\n            .then(res => {\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n                history.push('/');\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS,\r\n                    payload: err.response.data\r\n                });\r\n            });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBidToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get(`/user/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const uploadImage = (id, formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post(`/user/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getUserData(id));\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBidToken =  `Bearer ${token}`;\r\n    localStorage.setItem('FBidToken', FBidToken);\r\n    axios.defaults.headers.common['Authorization'] = FBidToken;\r\n}","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_RESTAURANTS = 'SET_RESTAURANTS';\r\nexport const SET_RESTAURANT = 'SET_RESTAURANT';\r\nexport const FILTER_RESTAURANTS = 'FILTER_RESTAURANTS';\r\nexport const POST_RESTAURANT = 'POST_RESTAURANT';\r\nexport const DELETE_RESTAURANT = 'DELETE_RESTAURANT';\r\nexport const UPDATE_RESTAURANT = 'UPDATE_RESTAURANT';","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Paper, Typography, Divider, TextField, Button, IconButton } from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../components/Spinner/Spinner';\r\n// Redux stuff\r\nimport { loginUser, registor } from '../redux/actions/userActions';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport {Send as SendIcon, PersonAdd as RegistorIcon, LockOpen as LoginIcon} from '@material-ui/icons';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        background: \"url('https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/loginBackground.png?alt=media') center/cover no-repeat\",\r\n        padding: \"5rem\",\r\n        paddingLeft: \"15rem\",\r\n        paddingRight: \"15rem\",\r\n        height: \"95vh\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: \"1rem\",\r\n        }\r\n    },\r\n    paper: {\r\n        padding: \"5%\"\r\n    },\r\n    form: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n          },\r\n        padding: \"5vh\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width:\"20%\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"40%\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"36%\",\r\n            marginLeft: \"32%\",\r\n            marginRight: \"32%\",\r\n        }\r\n    },\r\n    forgotPass: {\r\n        marginTop: \"-3%\",\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        textAlign: \"center\",\r\n        marginTop: 10\r\n    },\r\n    spinner: {\r\n        marginLeft: 0,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginLeft: \"-5%\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst Login = (props) => {\r\n\r\n    // Set states\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('login');\r\n    const [errors, setErrors] = useState({});\r\n    const [flag, setFlag] = useState('Initial render');\r\n\r\n    const classes = styles();\r\n\r\n    // Life cycle to set errors when logining\r\n    useEffect(() => {\r\n        if(flag !== 'Initial render') {\r\n            if(!props.UI.loading){\r\n                if(props.UI.errors !== null) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        login: props.UI.errors\r\n                    });\r\n                } else {\r\n                    // Set state of login to go to home page\r\n                    props.login.setState({\r\n                        ...props.login.state,\r\n                        login: true\r\n                    });\r\n                }\r\n            }\r\n        }   \r\n    }, [props.UI])\r\n\r\n    // Get data from typing\r\n    const handleChange = (event) => {\r\n        switch(event.target.name) {\r\n            case \"email\": \r\n                setEmail(event.target.value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(event.target.value);\r\n                break;\r\n            case \"confirmPassword\":\r\n                setConfirmPassword(event.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors({});\r\n    }\r\n\r\n    const handleRegistor = (e) => {\r\n        e.preventDefault();\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                    confirmPassword: confirmPassword\r\n                };\r\n                setFlag('Not initial render');\r\n                props.loginUser(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Action when submiting\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                };\r\n                setFlag('Not initial render');\r\n                props.loginUser(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Change login screen or registor screen\r\n    const clickLogin = (e) => {\r\n        e.preventDefault();\r\n        setType(\"login\");\r\n    }\r\n\r\n    const clickRegistor = () => {\r\n        setType(\"registor\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Typography variant=\"h4\" \r\n                    align=\"center\">\r\n                        i-Rate\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" \r\n                    align=\"center\">\r\n                        Place to rate restaurants\r\n                </Typography>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Login or Registor */}\r\n                {type === \"login\" ? (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n                            \r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                className={classes.button}\r\n                                endIcon={<SendIcon/>}\r\n                                onClick={handleSubmit}>\r\n                                Login\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography className={classes.forgotPass}\r\n                            variant=\"subtitle1\" \r\n                            align=\"center\">\r\n                                Forgot password? <a href=\"#\">\r\n                                    Click here\r\n                                </a>\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Don't have an account? \r\n                                <IconButton aria-label=\"Registor\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickRegistor}>\r\n                                        <RegistorIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n\r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <TextField name=\"confirmPassword\" \r\n                                label=\"Confirm password\" \r\n                                type=\"password\" \r\n                                variant=\"outlined\" \r\n                                onChange={handleChange}\r\n                            />\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                endIcon={<RegistorIcon/>}\r\n                                onClick={handleRegistor}\r\n                                type=\"submit\">\r\n                                Registor\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Had an account? \r\n                                <IconButton aria-label=\"Login\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickLogin}>\r\n                                        <LoginIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Check type of data\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    registor: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    loginUser,\r\n    registor\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst StyleBanner = styled.header`\r\n    min-height: 40vh;\r\n    background: url(${props => props.img}) center/cover no-repeat;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default StyleBanner;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles(theme => ({\r\n    banner: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Banner = () => {\r\n    const classes = styles();\r\n\r\n    return (\r\n        <div className={classes.banner}>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n    backgroundColor: \"transparent\",\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 400\r\n    },\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        width: 110,\r\n        height: 110,\r\n    }\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  content: {\r\n      textAlign: \"justify\"\r\n  },\r\n  contentContainer: {\r\n      marginTop: \"auto\",\r\n      marginBottom: \"auto\"\r\n  }\r\n}));\r\n\r\nconst HomeDescriptionItem = ({ content, img, direction }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper className={classes.paper} \r\n        elevation={0}>\r\n\r\n          <Grid container \r\n            spacing={2} \r\n            direction={direction}>\r\n\r\n              <Grid item \r\n                xs={12} sm={5} \r\n                align=\"center\">\r\n                  {img}\r\n              </Grid>\r\n\r\n              <Grid item \r\n                xs={12} sm={7}  \r\n                className={classes.contentContainer}>\r\n                    <Typography variant=\"body2\" \r\n                      className={classes.content}>\r\n                        {content}\r\n                    </Typography>\r\n              </Grid>\r\n\r\n          </Grid>\r\n          \r\n      </Paper>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeDescriptionItem;","import React from 'react';\r\n// MUI\r\nimport {Grid} from '@material-ui/core';\r\n// Components\r\nimport HomeDescriptionItem from './HomeDescriptionItem';\r\n// Icons\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\n\r\nconst dataSet = {\r\n    data:[\r\n        {\r\n            content: \"Lorem ipsum dolor, it amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <RoomIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consecttur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <PaymentIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <ForumIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst HomeDescription = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                    {dataSet.data.map(item => (\r\n                        <Grid item \r\n                            xs={12} lg={4} \r\n                            key={item.content}>\r\n                                <HomeDescriptionItem content={item.content} \r\n                                    direction={item.direction} \r\n                                    img={item.img}\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomeDescription;\r\n","import { SET_RESTAURANTS, SET_RESTAURANT, FILTER_RESTAURANTS, DELETE_RESTAURANT, UPDATE_RESTAURANT, POST_RESTAURANT, \r\n    LOADING_DATA, STOP_LOADING_UI, LOADING_UI, SET_ERRORS, CLEAR_ERRORS } from '../types';\r\nimport axios from 'axios';\r\n\r\n// // Get all restaurants\r\nexport const getRestaurants = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/restaurants')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_RESTAURANTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_RESTAURANTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Post a restaurant\r\nexport const postRestaurant = (newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.post('/restaurant', newData)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: POST_RESTAURANT,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\n// Delete a restaurant\r\nexport const deleteRestaurant = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.delete(`/restaurant/${id}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_RESTAURANT, payload: id })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//Update a restaurant\r\nexport const updateRestaurant = (id, newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.patch(`/restaurant/${id}`, newData)\r\n        .then(res => {\r\n            const result = {\r\n                restaurant : {\r\n                    ...res.data.restaurant,\r\n                    id: id,\r\n                },\r\n                message: \"Update successfully!\"\r\n            }\r\n            dispatch({\r\n                type: UPDATE_RESTAURANT,\r\n                payload: result\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: \"Update failed!\"\r\n            })\r\n        })  \r\n}\r\n\r\n//Filter\r\nexport const filter = (constraint) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/restaurantsFilter/${constraint}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FILTER_RESTAURANTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: FILTER_RESTAURANTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Load image\r\nexport const uploadImage = (formData, id) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post(`/restaurant/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getOne(id));\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getOne = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/restaurant/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_RESTAURANT,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, CardMedia, Typography } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\n// Redux stuff\r\nimport { getOne, uploadImage, updateRestaurant } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst labels = {\r\n    0: 'Very bad',\r\n    1: 'Bad',\r\n    2: 'Need to improve',\r\n    3: 'Normal',\r\n    4: 'Good',\r\n    5: 'Excellent',\r\n  };  \r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n      width: '100%',\r\n    },\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '45%',\r\n  },\r\n  labelRating: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  resultRating: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  contentRating: {\r\n    display: \"flex\",\r\n    paddingLeft: \"1em\"\r\n  }\r\n});\r\n\r\nclass FormUpdate extends Component {\r\n    \r\n    state = {\r\n        name: \"\",\r\n        type: \"\",\r\n        visitDate: \"\",\r\n        price: 0,\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        message: \"\",\r\n        url: null,\r\n        uploadedImage: null,\r\n        errors: {},\r\n        valueService: 0,\r\n        hoverService: -1,\r\n        valueCleanliness: 0,\r\n        hoverCleanliness: -1,\r\n        valueFood: 0,\r\n        hoverFood: -1\r\n    }\r\n\r\n    // Set data initially\r\n    componentDidMount() {\r\n        const {restaurant} = this.props;\r\n        let positionRating = {};\r\n        for(var i = 0; i < 5; i++) {\r\n            if (restaurant.serviceRating === labels[i]) {\r\n                positionRating.service = i+1;\r\n            }\r\n            if (restaurant.cleanlinessRating === labels[i]) {\r\n                positionRating.cleanliness = i+1;\r\n            }\r\n            if (restaurant.foodQualityRating === labels[i]) {\r\n                positionRating.food = i+1;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            name: restaurant.name,\r\n            type: restaurant.type,\r\n            visitDate: restaurant.visitDate,\r\n            price: restaurant.price,\r\n            reporter: restaurant.reporter,\r\n            notes: restaurant.notes,\r\n            url: restaurant.url,\r\n            valueService: positionRating.service,\r\n            hoverService: positionRating.service,\r\n            valueCleanliness: positionRating.cleanliness,\r\n            hoverCleanliness: positionRating.cleanliness,\r\n            valueFood: positionRating.food,\r\n            hoverFood: positionRating.food\r\n        });\r\n    }\r\n\r\n    // Get data from typing\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n        // Handle change rating\r\n        handleChangeRating = (event, newValue) => {\r\n            switch(event.target.name) {\r\n                case \"serviceRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueService: newValue\r\n                    });\r\n                    break;\r\n                case \"cleanlinessRating\": \r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueCleanliness: newValue\r\n                    });\r\n                    break;\r\n                case \"foodQualityRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueFood: newValue\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    \r\n        // Handle change active rating\r\n        handleChangeActive = (event, newHover) => {\r\n            switch(event.target.name) {\r\n                case \"serviceRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverService: newHover\r\n                    });\r\n                    break;\r\n                case \"cleanlinessRating\": \r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverCleanliness: newHover\r\n                    });\r\n                    break;\r\n                case \"foodQualityRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverFood: newHover\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }    \r\n\r\n    // Handle uploading\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        this.setState({\r\n            ...this.state,\r\n            uploadedImage: image\r\n        })\r\n    }\r\n\r\n    // Handle submiting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let errors = {};\r\n        // Check constraints\r\n        // TODO: create function\r\n        if(this.state.name === \"\") {\r\n            errors.name = \"Name is required!\"\r\n        } else \r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\"\r\n        }\r\n        if(this.state.visitDate === \"\") {\r\n            errors.visitDate = \"Visited date is required!\"\r\n        }\r\n        if(this.state.serviceRating === \"\") {\r\n            errors.serviceRating = \"Service rating is required!\"\r\n        }\r\n        if(this.state.cleanlinessRating === \"\") {\r\n            errors.cleanlinessRating = \"Cleanliness rating is required!\"\r\n        }\r\n        if(this.state.foodQualityRating === \"\") {\r\n            errors.foodQualityRating = \"Food quality rating is required!\"\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\"\r\n        }\r\n        if(this.state.reporter === \"\") {\r\n            errors.reporter = \"Reporter is required!\"\r\n        }\r\n\r\n        if(errors.type || errors.name || errors.price || errors.reporter || errors.visitDate ||\r\n            errors.serviceRating || errors.cleanlinessRating || errors.foodQualityRating){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const updateData = {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                visitDate: this.state.visitDate,\r\n                serviceRating: this.state.serviceRating,\r\n                cleanlinessRating: this.state.cleanlinessRating,\r\n                foodQualityRating: this.state.foodQualityRating,\r\n                price: this.state.price,\r\n                reporter: this.props.user.credentials.email,\r\n                notes: this.state.notes,\r\n                url: this.state.url\r\n            };\r\n\r\n            // Check if user change image\r\n            if(this.state.uploadedImage !== null) {\r\n                const formData = new FormData();\r\n                formData.append('image', this.state.uploadedImage, this.state.uploadedImage.name);\r\n                this.props.uploadImage(formData, this.props.restaurant.id);\r\n                this.props.history.push(\"/home\");\r\n            }\r\n           \r\n            // Start updating\r\n            this.props.updateRestaurant(this.props.restaurant.id, updateData);\r\n            this.props.history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        // Check if data load completely\r\n        if(this.props.data.loading) {\r\n            return (\r\n                <Spinner/>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                {this.props.data.message === \"Update successfully!\" && <Typography variant=\"h5\" align=\"center\" color=\"secondary\">{this.props.data.message}</Typography>}\r\n                <form className={classes.form} \r\n                    noValidate \r\n                    autoComplete=\"off\" \r\n                    onSubmit={this.handleSubmit}>\r\n                         {this.state.errors.name ? (\r\n                            <TextField error \r\n                                name=\"name\" \r\n                                helperText={this.state.errors.name} \r\n                                required label=\"1. Name\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange}    \r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"name\" \r\n                                required \r\n                                label=\"1. Name\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange}\r\n                                value={this.state.name}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.type ? (\r\n                            <TextField name=\"type\" \r\n                                error \r\n                                helperText={this.state.errors.type} \r\n                                required \r\n                                label=\"2. Type\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"type\" \r\n                                required \r\n                                label=\"2. Type\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.visitDate ? (\r\n                            <TextField error \r\n                                name=\"visitDate\" \r\n                                helperText={this.state.errors.visitDate} \r\n                                required \r\n                                label=\"3. Visited date\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange}\r\n                                type=\"date\"\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"visitDate\" \r\n                                required \r\n                                label=\"3. Visited date\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange}\r\n                                value={this.state.visitDate}\r\n                                type=\"date\"\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.price ? (\r\n                            <TextField name=\"price\" \r\n                                error \r\n                                helperText={this.state.errors.price}  \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"4. Price\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"price\" \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"4. Price\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.reporter ? (\r\n                            <TextField name=\"reporter\" \r\n                                error \r\n                                helperText={this.state.errors.reporter} \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"reporter\" \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField name=\"notes\" \r\n                            label=\"6. Notes\" \r\n                            variant=\"standard\"  \r\n                            onChange={this.handleChange} \r\n                            value={this.state.notes && this.state.notes}                           \r\n                        />\r\n\r\n                        <label htmlFor=\"serviceRating\" className={classes.labelRating}>\r\n                            7. Service rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"serviceRating\"\r\n                                value={this.state.valueService}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueService !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverService !== -1 ? \r\n                                        this.state.hoverService : \r\n                                        this.state.valueService]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n\r\n                        <label htmlFor=\"cleanlinessRating\" className={classes.labelRating}>\r\n                            8. Cleanliness rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"cleanlinessRating\"\r\n                                value={this.state.valueCleanliness}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueCleanliness !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverCleanliness !== -1 ? \r\n                                        this.state.hoverCleanliness : \r\n                                        this.state.valueCleanliness]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n                        \r\n                        <label htmlFor=\"foodQualityRating\" className={classes.labelRating}>\r\n                            9. Food quality rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"foodQualityRating\"\r\n                                value={this.state.valueFood}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueFood !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverFood !== -1 ? \r\n                                        this.state.hoverFood : \r\n                                        this.state.valueFood]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n\r\n                        {this.state.url !== null && (\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={this.state.url}\r\n                                onClick={this.handleMediaClick}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField type=\"file\" \r\n                            name=\"image\" \r\n                            onChange={this.handleUpload}\r\n                        />\r\n\r\n                        <Button type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\">\r\n                                Update\r\n                        </Button>\r\n                        {/* Message and spinner */}\r\n                        {this.props.data.loading && <Spinner/>}\r\n                        {this.props.UI.errors && \r\n                            <h2>\r\n                                Update failed!\r\n                            </h2>}\r\n\r\n                </form>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n// Check type of data\r\nFormUpdate.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    getOne: PropTypes.func.isRequired,\r\n    updateRestaurant: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getOne,\r\n    updateRestaurant,\r\n    uploadImage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormUpdate));","import React, {useState} from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormUpdate from '../Forms/FormUpdate';\r\n// Icon\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\"\r\n  },\r\n}));\r\n\r\nconst ModalUpdate = ({restaurant, history}) => {\r\n  const classes = useStyles();\r\n  //Set state\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Update an apartment\r\n        </Typography>\r\n      <FormUpdate restaurant={restaurant} history={history}/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Update and note\" placement=\"top\">\r\n        <IconButton aria-label=\"update\" \r\n          color=\"primary\" \r\n          onClick={handleOpen}>\r\n            <UpdateIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalUpdate;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// Date handler\r\nimport moment from 'moment';\r\n// MUI\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Components\r\nimport ModalUpdate from '../Modals/ModalUpdate';\r\n// icons\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardActions: {\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  cardContent: {\r\n    height: \"300px\"\r\n  }\r\n}));\r\n\r\nconst CardRestaurant = ({restaurant, flag, deleteRestaurant, history}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  // Delete apartment\r\n  const handleDelete = () => {\r\n    deleteRestaurant(restaurant.id);\r\n  }\r\n\r\n  // Check apartment card shows for which page\r\n  if(restaurant) {\r\n    return (\r\n      <Card className={classes.root} \r\n        raised>\r\n        {/* Header */}\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"/>\r\n          }\r\n          title={restaurant.name}\r\n          subheader={moment(restaurant.dateCreate).format('DD/MM/YYYY')}\r\n        />\r\n        {/* Picture */}\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={restaurant.url}\r\n        />\r\n        {/* Content */}\r\n        <CardContent className={classes.cardContent}>\r\n\r\n          <Typography variant=\"h6\">\r\n            Details\r\n          </Typography>\r\n            \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Type: {restaurant.type}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Visited date: {moment(restaurant.visitDate).format('DD/MM/YYYY')}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Price: {restaurant.price}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Service rating: {restaurant.serviceRating}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Cleanliness rating: {restaurant.cleanlinessRating}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Food quality rating: {restaurant.foodQualityRating}\r\n          </Typography>\r\n    \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Reporter: {restaurant.reporter}\r\n          </Typography>\r\n          \r\n          {restaurant.notes !== \"Empty\" && (\r\n            <Typography variant=\"subtitle2\" \r\n              color=\"secondary\">\r\n                &nbsp;<i>*Note: {restaurant.notes}</i>\r\n            </Typography>\r\n          )}\r\n\r\n        </CardContent>\r\n\r\n        {/* Actions */}\r\n        {flag === \"restaurants\" && (\r\n          <CardActions className={classes.cardActions} \r\n                disableSpacing>\r\n\r\n            <ModalUpdate restaurant={restaurant} history={history}/>\r\n\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <IconButton aria-label=\"delete\" \r\n                  color=\"secondary\" \r\n                  onClick={handleDelete}>\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardRestaurant;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst HomeRestaurant = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    New rating restaurant\r\n            </Typography>\r\n            <br/>\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show restaurants */}\r\n                    {props.restaurants.map ? props.restaurants.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4}   \r\n                            className={classes.hover} \r\n                            key={restaurant.id}>\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"home\"\r\n                                />\r\n                        </Grid>\r\n                    )) : (\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" align=\"center\">\r\n                                No existed rating restaurant \r\n                            </Typography>\r\n                        </Grid>\r\n                    )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeRestaurant;\r\n","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#3f51b5\",\r\n        padding: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    title: {\r\n        color: \"white\"\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst SearchResult = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\"\r\n                className={classes.title}>\r\n                    Search result\r\n            </Typography>\r\n\r\n            <br/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n\r\n                    {props.loading && <Spinner/>}\r\n\r\n                    {/* Show apartment */}\r\n                    {props.restaurantsFilter.length !== 0 && props.restaurantsFilter.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={restaurant.id}>\r\n\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"restaurants\"\r\n                                />\r\n\r\n                        </Grid>\r\n                    ))}\r\n\r\n                    {props.restaurantsFilter.length === 0 && \r\n                        <h3 style={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\", \r\n                            color: \"white\"\r\n                            }}>\r\n                                No matched results\r\n                        </h3>}\r\n            </Grid>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from 'react';\r\n// MUI\r\nimport { Divider as DividerMUI } from '@material-ui/core';\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <DividerMUI style={{marginTop: \"3rem\", marginBottom: \"3rem\"}}/>\r\n    )\r\n}\r\n\r\nexport default Divider;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport HomeDescription from '../components/HomeDescription/HomeDescription';\r\nimport HomeRestaurant from '../components/HomeRestaurant/HomeRestaurant';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getRestaurants } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getRestaurants();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/homeBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult restaurantsFilter={this.props.data.restaurantsFilter} \r\n                            loading={this.props.data.loading}\r\n                        />\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <HomeDescription/>\r\n\r\n                <Divider/>\r\n\r\n                <HomeRestaurant restaurants={this.props.data.restaurants} \r\n                    loading={this.props.data.loading}\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nHome.propTypes = {\r\n    getRestaurants: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getRestaurants\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, Typography} from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n//Components\r\nimport Spinner from '../Spinner/Spinner';\r\n// Redux stuff\r\nimport { postRestaurant, uploadImage } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst labels = {\r\n  0: 'Very bad',\r\n  1: 'Bad',\r\n  2: 'Need to improve',\r\n  3: 'Normal',\r\n  4: 'Good',\r\n  5: 'Excellent',\r\n};\r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n  customError: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    marginTop: 10\r\n  },\r\n  labelRating: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  resultRating: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  contentRating: {\r\n    display: \"flex\",\r\n    paddingLeft: \"1em\"\r\n  }\r\n});\r\n\r\nclass FormAdd extends Component {\r\n    state = {\r\n        name: \"\",\r\n        type: \"\",\r\n        visitDate: \"\",\r\n        price: 0,\r\n        serviceRating: \"\",\r\n        cleanlinessRating: \"\",\r\n        foodQualityRating: \"\",\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        url: \"\",\r\n        errors: {},\r\n        valueService: 0,\r\n        hoverService: -1,\r\n        valueCleanliness: 0,\r\n        hoverCleanliness: -1,\r\n        valueFood: 0,\r\n        hoverFood: -1\r\n    }\r\n\r\n    // Get errors after adding\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            ...this.state,\r\n            message: this.props.data.message\r\n        })\r\n        if(this.props.data.message === \"Loaded image\") {\r\n            \r\n        }\r\n    }\r\n\r\n    // Get data from typing to state\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name] : event.target.value\r\n        });\r\n    }\r\n\r\n    // Handle change rating\r\n    handleChangeRating = (event, newValue) => {\r\n        switch(event.target.name) {\r\n            case \"serviceRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    valueService: newValue\r\n                });\r\n                break;\r\n            case \"cleanlinessRating\": \r\n                this.setState({\r\n                    ...this.state,\r\n                    valueCleanliness: newValue\r\n                });\r\n                break;\r\n            case \"foodQualityRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    valueFood: newValue\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Handle change active rating\r\n    handleChangeActive = (event, newHover) => {\r\n        switch(event.target.name) {\r\n            case \"serviceRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverService: newHover\r\n                });\r\n                break;\r\n            case \"cleanlinessRating\": \r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverCleanliness: newHover\r\n                });\r\n                break;\r\n            case \"foodQualityRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverFood: newHover\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Upload image\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData, this.props.data.restaurants[this.props.data.restaurants.length-1].restaurant.id);\r\n    }\r\n\r\n    // Handle submiting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errors = {\r\n            count: 0\r\n        };\r\n        // Check constraints\r\n        if(this.state.name === \"\") {\r\n            errors.name = \"Name is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.visitDate === \"\") {\r\n            errors.visitDate = \"Visited date is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\";\r\n            errors.count += 1;\r\n        }\r\n\r\n        if(errors.count > 0){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const newData = {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                visitDate: this.state.visitDate,\r\n                serviceRating: labels[this.state.valueService],\r\n                cleanlinessRating: labels[this.state.valueCleanliness],\r\n                foodQualityRating: labels[this.state.valueFood],\r\n                price: this.state.price,\r\n                reporter: this.props.user.credentials.email,\r\n                notes: this.state.notes,\r\n                createdDate: new Date().toISOString()\r\n            };\r\n            // Start adding\r\n            this.props.postRestaurant(newData);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        if(this.props.data.message === \"Loaded image\") {\r\n            this.props.closeModel();\r\n            this.props.history.push('/home');\r\n        }\r\n        return (\r\n            <form className={classes.form} \r\n                noValidate \r\n                autoComplete=\"off\" \r\n                onSubmit={this.handleSubmit}>\r\n\r\n                    {this.state.errors.name ? (\r\n                        <TextField error \r\n                            name=\"name\" \r\n                            helperText={this.state.errors.name} \r\n                            required label=\"1. Name\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}    \r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"name\" \r\n                            required \r\n                            label=\"1. Name\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.type ? (\r\n                        <TextField error \r\n                            name=\"type\" \r\n                            helperText={this.state.errors.type} \r\n                            required label=\"2. Type\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}    \r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"type\" \r\n                            required \r\n                            label=\"2. Type\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.visitDate ? (\r\n                        <TextField error \r\n                            name=\"visitDate\" \r\n                            helperText={this.state.errors.visitDate} \r\n                            required \r\n                            label=\"3. Visited date\" \r\n                            variant=\"standard\"  \r\n                            onChange={this.handleChange}\r\n                            type=\"date\"\r\n                            InputLabelProps={{shrink: true}}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"visitDate\" \r\n                            required \r\n                            label=\"3. Visited date\" \r\n                            variant=\"standard\"  \r\n                            type=\"date\"\r\n                            onChange={this.handleChange}\r\n                            InputLabelProps={{shrink: true}}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.price ? (\r\n                        <TextField error \r\n                            name=\"price\" \r\n                            type=\"number\" \r\n                            helperText={this.state.errors.price} \r\n                            required \r\n                            label=\"4. Price\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"price\" \r\n                            type=\"number\" \r\n                            required \r\n                            label=\"4. Price\" \r\n                            variant=\"standard\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    <label htmlFor=\"serviceRating\" className={classes.labelRating}>\r\n                        5. Service rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"serviceRating\"\r\n                            value={this.state.value}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueService !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverService !== -1 ? \r\n                                    this.state.hoverService : \r\n                                    this.state.valueService]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n\r\n                    <label htmlFor=\"cleanlinessRating\" className={classes.labelRating}>\r\n                        6. Cleanliness rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"cleanlinessRating\"\r\n                            value={this.state.value}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueCleanliness !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverCleanliness !== -1 ? \r\n                                    this.state.hoverCleanliness : \r\n                                    this.state.valueCleanliness]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n                    \r\n                    <label htmlFor=\"foodQualityRating\" className={classes.labelRating}>\r\n                        7. Food quality rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"foodQualityRating\"\r\n                            value={this.state.value}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueFood !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverFood !== -1 ? \r\n                                    this.state.hoverFood : \r\n                                    this.state.valueFood]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n\r\n                    <Button type=\"submit\" \r\n                        variant=\"contained\" \r\n                        color=\"primary\">\r\n                            Create information\r\n                    </Button>\r\n                    {/* Message and spinner */}\r\n                    {this.state.message && (\r\n                        <>\r\n                            <Typography>\r\n                                Add restaurant image:\r\n                            </Typography>\r\n                            <TextField type=\"file\" \r\n                                name=\"image\" \r\n                                onChange={this.handleUpload}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {this.props.data.message === \"Loaded image\" && (\r\n                        <Typography variant=\"body2\" \r\n                            className={classes.customError}>\r\n                                {this.props.data.message}\r\n                        </Typography>\r\n                    )}\r\n                    {this.props.data.loading && <Spinner/>}\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n// Check type of data\r\nFormAdd.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    postRestaurant: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    postRestaurant,\r\n    uploadImage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormAdd));","import React, {useState} from 'react';\r\n//MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormAdd from '../Forms/FormAdd';\r\n//Icon\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\",\r\n  }\r\n}));\r\n\r\nconst ModalAdd = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // Set state\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Create a rating restaurant\r\n      </Typography>\r\n      <FormAdd closeModel={handleClose} history={props.history}/>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add more\">\r\n        <AddIcon className={classes.addIcon} \r\n          onClick={handleOpen}\r\n        />\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAdd;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography, Tooltip} from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport ModalAdd from \"../Modals/ModalAdd\";\r\nimport Divider from \"../Divider/Divider\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: \"2%\"\r\n    },\r\n    divider: {\r\n        marginBottom: \"1rem\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    hoverAdd: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n            cursor: \"pointer\"\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    },\r\n    addIcon: {\r\n        width: \"40%\",\r\n        height: \"40%\",\r\n        margin: \"30%\"\r\n    }\r\n  }));\r\n  \r\nconst ListRestaurant = (props) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    List of rating restaurants\r\n            </Typography>\r\n\r\n            <Divider className={classes.divider}/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n\r\n                    <Grid item \r\n                        xs={12} md={6} lg={4} \r\n                        className={classes.hoverAdd} >\r\n                            <Tooltip title=\"Add more\">\r\n                                <>\r\n                                    <ModalAdd history={props.history}/>\r\n                                </>\r\n                            </Tooltip>\r\n                    </Grid>\r\n\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show apartments */}\r\n                    {props.restaurants.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={restaurant.id+Math.random()}>\r\n\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"restaurants\" \r\n                                    deleteRestaurant={props.deleteRestaurant}\r\n                                    history={props.history}\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListRestaurant;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport ListRestaurant from '../components/ListRestaurant/ListRestaurant';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getRestaurants, deleteRestaurant } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Apartments extends Component {\r\n\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getRestaurants();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/restaurantBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n\r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult restaurantsFilter={this.props.data.restaurantsFilter}/>\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <ListRestaurant restaurants={this.props.data.restaurants} \r\n                    loading={this.props.data.loading} \r\n                    deleteRestaurant={this.props.deleteRestaurant.bind(this)}\r\n                    history={this.props.history}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nApartments.propTypes = {\r\n    getRestaurants: PropTypes.func.isRequired,\r\n    deleteRestaurant: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getRestaurants,\r\n    deleteRestaurant\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Apartments);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\n// MUI\r\nimport clsx from 'clsx';\r\nimport {Drawer, CssBaseline, AppBar, Toolbar, \r\n  List, Typography, Divider, ListItem, ListItemIcon, \r\n  ListItemText, InputBase, IconButton} from \"@material-ui/core\";\r\nimport { fade, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\n// Redux stuff\r\nimport {getUserData} from '../../redux/actions/userActions';\r\nimport {filter} from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// Width of drawer menu\r\nconst drawerWidth = 240;\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\"\r\n  },\r\n  avatarSize: {\r\n    height: theme.spacing(7),\r\n    width: theme.spacing(7)\r\n  },\r\n  divider: {\r\n    background: \"blue\"\r\n  },\r\n  // All for search\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    // Add more when screen up 600\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '8ch',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch'\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  // Add more when screen up 960\r\n  [theme.breakpoints.up('md')]: {\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    }\r\n  },\r\n}));\r\n\r\nconst Nav = (props) => {\r\n\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n\r\n  // Set states\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    //Delete variable on local storage\r\n    localStorage.removeItem('FBidToken');\r\n    localStorage.removeItem('userId');\r\n\r\n    // Get icon close on toolbar\r\n    const iconClose = document.getElementById('iconCloseDrawer');\r\n    // Click on it when log out\r\n    if(iconClose) {\r\n      iconClose.click();\r\n    }\r\n    \r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      login: false\r\n    });\r\n  }\r\n\r\n  // Open menu\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n\r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: true\r\n    });\r\n  };\r\n\r\n  // Close menu\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n     // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  // Get width auto\r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  //Search\r\n  const handleChangeSearch = (e) => {\r\n    let constraint = e.target.value;\r\n    if(constraint !== \"\"){\r\n      props.filter(constraint.toLowerCase());\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: true\r\n      })\r\n    } else {\r\n      props.data.restaurantsFilter = [];\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: false\r\n      })\r\n    }\r\n  }\r\n\r\n  // Use for rendering auto when screen size changes\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Use to match the content to the app bar exactly */}\r\n      <CssBaseline /> \r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n          <Toolbar>\r\n            {/* Burger button */}\r\n            {window.innerWidth <= 960 && (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}>\r\n                  <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            {/* Title */}\r\n            <Grid container \r\n              justify=\"space-between\" \r\n              alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" \r\n                    noWrap \r\n                    align=\"center\">\r\n                      i-Rate\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* Search field */}\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                      name=\"search\"\r\n                      onChange={handleChangeSearch}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n      </AppBar>\r\n      {/* Drawer */}\r\n      {window.innerWidth > 960 ? /* Drawer for laptop */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open >\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container\r\n                item xs={4}  \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\" \r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Typography>\r\n                      Hello, {props.user.credentials.email}\r\n                    </Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Restaurants\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/restaurants\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink} \r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      ) : /* Drawer for tablet */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open={open}>\r\n            <div className={classes.drawerHeader}>\r\n              <IconButton onClick={handleDrawerClose} id=\"iconCloseDrawer\">\r\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container \r\n                item xs={4} \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"\r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography>\r\n                    Hello, {props.user.credentials.email}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Restaurants\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/restaurants\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink}\r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n// Check type of data\r\nNav.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n  getUserData,\r\n  filter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Nav);\r\n","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return{\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER: \r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: false,\r\n                credentials: action.payload,\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_RESTAURANTS, SET_RESTAURANT, DELETE_RESTAURANT, POST_RESTAURANT, LOADING_DATA, FILTER_RESTAURANTS, UPDATE_RESTAURANT} from '../types';\r\n\r\nconst initialState = {\r\n    restaurants: [],\r\n    restaurantsFilter: [],\r\n    restaurant: {},\r\n    loading: false,\r\n    message: \"\",\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    let index;\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_RESTAURANTS:\r\n            return {\r\n                ...state,\r\n                restaurants: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_RESTAURANT: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: \"Loaded image\",\r\n                restaurant: action.payload\r\n            }\r\n        case FILTER_RESTAURANTS:\r\n            return {\r\n                ...state,\r\n                restaurantsFilter: action.payload,\r\n                loading: false\r\n            }\r\n        case POST_RESTAURANT:\r\n            state.restaurants.push(action.payload);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n        case UPDATE_RESTAURANT: \r\n        console.log(action);\r\n            index = state.restaurants.findIndex(restaurant => restaurant.id === action.payload.restaurant.id);\r\n            state.restaurants.splice(index, 1);\r\n            state.restaurants.push(action.payload.restaurant);\r\n           \r\n            // Sort by date\r\n            state.restaurants.sort((a, b) => (a.dateCreate < b.dateCreate) ? 1 : (a.dateCreate === b.dateCreate) ? ((a.type > b.type) ? 1 : -1) : -1 )\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                restaurantsFilter: [],\r\n                message: action.payload.message\r\n            }\r\n        case DELETE_RESTAURANT:\r\n            index = state.restaurants.findIndex(restaurant => restaurant.id === action.payload);\r\n            state.restaurants.splice(index, 1);\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload.message\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState, \r\n    compose(applyMiddleware(...middleware), \r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\nimport {BrowserRouter, Switch, Redirect, Route} from \"react-router-dom\";\nimport \"./App.css\";\n// MUI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\n// Components\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Restaurants from \"./pages/Restaurants\";\nimport Nav from \"./components/Navigation/Nav\";\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n// Middleware\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\n// Set base url to connect API\naxios.defaults.baseURL= \"https://app-irate.herokuapp.com/\";\n\n// Token\nconst token = localStorage.FBidToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser());\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData(localStorage.userId));\n  }\n}\n\n// Css-in-react\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n    overflow: \"hidden\"\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: \"rgba(0, 0, 0.08, 0.08)\",\n\n  },\n  // Add more when screen down 960\n  [theme.breakpoints.down('sm')]: {\n    content: {\n      flexGrow: 1,\n\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -240,\n    },\n    // Content should longer or shorter\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }\n  }\n});\n\nclass App extends Component {\n  \n  state = {\n    // open to assign to contentShift => false mean drawer close and then main content longer\n    open: false,\n    // Get from login\n    login: false \n  }\n  componentDidMount() {\n    // Check condition to re-render when login or logout\n    if(localStorage.FBidToken === undefined) {\n      this.setState({\n        ...this.state,\n        login: false\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        login: true\n      });\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        {this.state.login ? (\n          <> \n            <div className={classes.root}>\n              {/* Assign this to setState in Nav => render 2 times*/}\n              <Nav app={this}/>\n              <main  className={clsx(classes.content, {\n                [classes.contentShift]: this.state.open,\n              })}>\n                <div className={classes.toolbar} />\n                  <Switch>\n                    <Redirect exact path=\"/\" to=\"/home\"/>\n                    <Redirect exact path=\"/login\" to=\"/home\"/>\n                    <Route path=\"/home\" exact component={(props) => <Home app={this} history={props.history}/>}/>\n                    <Route path=\"/restaurants\" exact component={(props) => <Restaurants app={this} history={props.history}/>}/>\n                  </Switch>\n              </main>\n            </div>\n          </>\n        ) : (\n          <>\n            <Redirect exact path=\"/\" to=\"/login\"/>\n            <Route path=\"/login\" exact render={(...props) => <Login login={this}/>} />\n          </>\n        )}\n        </BrowserRouter>\n      </Provider> \n    )\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n\tReactDOM.render(\n\t  <React.StrictMode>\n\t\t<App />\n\t  </React.StrictMode>,\n\t  document.getElementById('root')\n\t);\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}