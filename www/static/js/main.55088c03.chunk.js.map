{"version":3,"sources":["components/Spinner/Spinner.js","redux/types.js","redux/actions/userActions.js","pages/Login.js","components/Banner/StyledBanner.js","components/Banner/Banner.js","components/HomeDescription/HomeDescriptionItem.js","components/HomeDescription/HomeDescription.js","components/AlertDialog/AlertDialog.js","components/Autocomplete/AutoAddress.js","redux/actions/dataAction.js","components/Forms/FormUpdate.js","components/Modals/ModalUpdate.js","components/SocialShare/SocialShare.js","components/CardRestaurant/CardRestaurant.js","components/HomeRestaurant/HomeRestaurant.js","components/SearchResult/SearchResult.js","components/Divider/Divider.js","pages/Home.js","components/Forms/FormAdd.js","components/Modals/ModalAdd.js","components/ListRestaurant/ListRestaurant.js","pages/Restaurants.js","components/Navigation/Nav.js","redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","marginTop","spacing","LinearIndeterminate","classes","className","LinearProgress","getUserData","id","dispatch","type","axios","get","then","res","payload","data","catch","err","console","log","setAuthorizationHeader","token","FBidToken","localStorage","setItem","defaults","headers","common","styles","background","padding","paddingLeft","paddingRight","height","breakpoints","down","paper","form","margin","button","marginLeft","marginRight","forgotPass","customError","color","textAlign","spinner","mapActionsToProps","loginUser","userData","post","userId","response","registor","newUserData","history","connect","state","user","UI","props","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setType","errors","setErrors","flag","setFlag","useEffect","loading","login","setState","handleChange","event","target","value","length","slice","name","Paper","elevation","Typography","variant","align","noValidate","autoComplete","TextField","error","label","helperText","onChange","Button","endIcon","Send","onClick","e","preventDefault","match","href","IconButton","aria-label","StyleBanner","styled","header","img","banner","Banner","flexGrow","maxWidth","backgroundColor","image","display","maxHeight","content","contentContainer","marginBottom","HomeDescriptionItem","direction","Grid","container","item","xs","sm","dataSet","style","HomeDescription","map","lg","key","AlertDialog","action","description","title","parent","React","open","setOpen","handleClose","submit","handleYes","Tooltip","placement","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","google","window","AutoAddress","address","maps","Map","document","getElementById","center","lat","lng","zoom","card","input","controls","ControlPosition","TOP_RIGHT","push","autocomplete","places","Autocomplete","bindTo","setFields","marker","infowindow","InfoWindow","infowindowContent","setContent","Marker","anchorPoint","Point","position","addListener","close","setVisible","place","getPlace","geometry","viewport","fitBounds","setCenter","location","setZoom","setPosition","address_components","short_name","join","children","src","icon","textContent","getPosition","alert","initMap","placeholder","getRestaurants","uploadImage","formData","getOne","clearErrors","labels","0","1","2","3","4","5","FormUpdate","visitDate","price","reporter","notes","message","url","uploadedImage","valueService","hoverService","valueCleanliness","hoverCleanliness","valueFood","hoverFood","handleChangeRating","newValue","handleChangeActive","newHover","handleUpload","files","handleSubmit","handleUpdate","serviceRating","cleanlinessRating","foodQualityRating","totalRating","Math","round","updateData","credentials","FormData","append","restaurant","updateRestaurant","this","positionRating","i","service","cleanliness","food","onSubmit","required","htmlFor","labelRating","contentRating","Rating","precision","onChangeActive","Box","ml","resultRating","CardMedia","media","handleMediaClick","bind","Component","newData","patch","result","withStyles","paddingTop","fontSize","fontWeight","overflow","palette","border","boxShadow","shadows","top","left","transform","addIcon","ModalUpdate","body","Modal","zIndex","justifyContent","only","SocialShare","ShareList","Passers","share","FacebookShareButton","quote","FacebookIcon","size","EmailShareButton","subject","emailIcon","EmailIcon","cardActions","cardContent","CardRestaurant","deleteRestaurant","Card","raised","CardHeader","avatar","Avatar","subheader","moment","dateCreate","format","CardContent","CardActions","disableSpacing","hover","opacity","HomeRestaurant","alignItems","restaurants","md","SearchResult","restaurantsFilter","Divider","Home","StyledBanner","app","search","FormAdd","count","createdDate","Date","toISOString","postRestaurant","closeModel","InputLabelProps","shrink","ModalAdd","divider","hoverAdd","cursor","ListRestaurant","random","Apartments","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","navLink","textDecoration","avatarSize","borderRadius","shape","fade","white","up","searchIcon","pointerEvents","inputRoot","inputInput","toolbar","mixins","menuButton","drawerHeader","filter","constraint","useTheme","innerWidth","setWidth","handleLogout","removeItem","iconClose","click","handleDrawerClose","updateWidthAndHeight","addEventListener","removeEventListener","CssBaseline","AppBar","clsx","Toolbar","edge","justify","noWrap","InputBase","inputProps","toLowerCase","Drawer","anchor","alt","List","text","index","to","ListItem","ListItemIcon","ListItemText","primary","initialState","authenticated","middleware","thunk","reducers","combineReducers","findIndex","splice","sort","a","b","store","createStore","compose","applyMiddleware","baseURL","jwtDecode","exp","now","App","undefined","contentShift","exact","path","component","Restaurants","render","Boolean","hostname","renderReactDom","ReactDOM","cordova","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55088c03.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n    </div>\r\n  );\r\n}\r\n","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const SET_ERRORS_LOGIN = 'SET_ERRORS_LOGIN';\r\nexport const SET_ERRORS_REGISTOR = 'SET_ERRORS_REGISTOR';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_RESTAURANTS = 'SET_RESTAURANTS';\r\nexport const SET_RESTAURANT = 'SET_RESTAURANT';\r\nexport const FILTER_RESTAURANTS = 'FILTER_RESTAURANTS';\r\nexport const POST_RESTAURANT = 'POST_RESTAURANT';\r\nexport const DELETE_RESTAURANT = 'DELETE_RESTAURANT';\r\nexport const UPDATE_RESTAURANT = 'UPDATE_RESTAURANT';","import { SET_USER, SET_ERRORS_LOGIN, SET_ERRORS_REGISTOR, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, STOP_LOADING_UI } from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/login', userData)\r\n            .then(res => {\r\n                localStorage.userId = res.data.id;\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS_LOGIN,\r\n                    payload: err.response\r\n                });\r\n            });\r\n};\r\n\r\nexport const registor = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post('/registor', newUserData)\r\n            .then(res => {\r\n                setAuthorizationHeader(res.data.token);\r\n                dispatch(getUserData(res.data.id));\r\n                dispatch({ type: CLEAR_ERRORS });\r\n                dispatch({ type: STOP_LOADING_UI });\r\n            })\r\n            .catch(err => {\r\n                dispatch({  \r\n                    type: SET_ERRORS_REGISTOR,\r\n                    payload: err.response\r\n                });\r\n            });\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('FBidToken');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({ type: SET_UNAUTHENTICATED });\r\n}\r\n\r\nexport const getUserData = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get(`/user/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const uploadImage = (id, formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post(`/user/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getUserData(id));\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nconst setAuthorizationHeader = (token) => {\r\n    const FBidToken =  `Bearer ${token}`;\r\n    localStorage.setItem('FBidToken', FBidToken);\r\n    axios.defaults.headers.common['Authorization'] = FBidToken;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Paper, Typography, Divider, TextField, Button, IconButton } from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../components/Spinner/Spinner';\r\n// Redux stuff\r\nimport { loginUser, registor } from '../redux/actions/userActions';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport {Send as SendIcon, PersonAdd as RegistorIcon, LockOpen as LoginIcon} from '@material-ui/icons';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n    root: {\r\n        background: \"url('https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/loginBackground.png?alt=media') center/cover no-repeat\",\r\n        padding: \"5rem\",\r\n        paddingLeft: \"15rem\",\r\n        paddingRight: \"15rem\",\r\n        height: \"95vh\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            padding: \"1rem\",\r\n        }\r\n    },\r\n    paper: {\r\n        padding: \"5%\"\r\n    },\r\n    form: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n          },\r\n        padding: \"5vh\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width:\"20%\",\r\n        marginLeft: \"40%\",\r\n        marginRight: \"40%\",\r\n        // Change when screen size down 600\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"36%\",\r\n            marginLeft: \"32%\",\r\n            marginRight: \"32%\",\r\n        }\r\n    },\r\n    forgotPass: {\r\n        marginTop: \"-3%\",\r\n    },\r\n    customError: {\r\n        color: \"red\",\r\n        textAlign: \"center\",\r\n        marginTop: 10\r\n    },\r\n    spinner: {\r\n        marginLeft: 0,\r\n        [theme.breakpoints.down('md')]: {\r\n            marginLeft: \"-5%\"\r\n        }\r\n    }\r\n}));\r\n\r\nconst Login = (props) => {\r\n\r\n    // Set states\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [type, setType] = useState('login');\r\n    const [errors, setErrors] = useState({});\r\n    const [flag, setFlag] = useState('Initial render');\r\n\r\n    const classes = styles();\r\n\r\n    // Life cycle to set errors when logining\r\n    useEffect(() => {\r\n        if(flag !== 'Initial render') {\r\n            if(!props.UI.loading){\r\n                if(props.UI.errors !== null) {\r\n                    setErrors({\r\n                        ...errors,\r\n                        login: props.UI.errors\r\n                    });\r\n                } else {\r\n                    // Set state of login to go to home page\r\n                    props.login.setState({\r\n                        ...props.login.state,\r\n                        login: true\r\n                    });\r\n                }\r\n            }\r\n        }   \r\n    }, [props.UI])\r\n\r\n    // Get data from typing\r\n    const handleChange = (event) => {\r\n        if(event.target.value.length > 30) {\r\n            event.target.value = event.target.value.slice(0, 30);\r\n        }\r\n        \r\n        switch(event.target.name) {\r\n            case \"email\": \r\n                setEmail(event.target.value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(event.target.value);\r\n                break;\r\n            case \"confirmPassword\":\r\n                setConfirmPassword(event.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors({});\r\n    }\r\n\r\n    const handleRegistor = (e) => {\r\n        e.preventDefault();\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                    confirmPassword: confirmPassword\r\n                };\r\n                setFlag('Not initial render');\r\n                props.registor(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Action when submiting\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (email.match(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)) {\r\n            if(password) {\r\n                const userData = {\r\n                    email: email,\r\n                    password: password,\r\n                };\r\n                setFlag('Not initial render');\r\n                props.loginUser(userData);\r\n            } else {\r\n                setErrors({\r\n                    ...errors,\r\n                    password: 'Password is not empty'\r\n                })\r\n            }\r\n        } else {\r\n            setErrors({\r\n                ...errors,\r\n                email: 'Email is not valid'\r\n            });\r\n        }\r\n    }\r\n\r\n    // Change login screen or registor screen\r\n    const clickLogin = (e) => {\r\n        e.preventDefault();\r\n        setType(\"login\");\r\n    }\r\n\r\n    const clickRegistor = () => {\r\n        setType(\"registor\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Typography variant=\"h4\" \r\n                    align=\"center\">\r\n                        i-Rate\r\n                </Typography>\r\n\r\n                <Typography variant=\"subtitle1\" \r\n                    align=\"center\">\r\n                        Place to rate restaurants\r\n                </Typography>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Login or Registor */}\r\n                {type === \"login\" ? (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n                            \r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                className={classes.button}\r\n                                endIcon={<SendIcon/>}\r\n                                onClick={handleSubmit}>\r\n                                Login\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography className={classes.forgotPass}\r\n                            variant=\"subtitle1\" \r\n                            align=\"center\">\r\n                                Forgot password? <a href=\"#\">\r\n                                    Click here\r\n                                </a>\r\n                        </Typography>\r\n                        <br/>\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Don't have an account? \r\n                                <IconButton aria-label=\"Registor\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickRegistor}>\r\n                                        <RegistorIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <form className={classes.form} \r\n                            noValidate \r\n                            autoComplete=\"off\">\r\n\r\n                            {errors.email ? (\r\n                                <TextField name=\"email\" \r\n                                    error\r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"email\" \r\n                                    label=\"Email\" \r\n                                    type=\"email\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n\r\n                            {errors.password ? (\r\n                                <TextField name=\"password\"\r\n                                    error \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    helperText={errors.password}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            ) : (\r\n                                <TextField name=\"password\" \r\n                                    label=\"Password\" \r\n                                    type=\"password\" \r\n                                    variant=\"outlined\" \r\n                                    onChange={handleChange}\r\n                                />\r\n                            )}\r\n                            <TextField name=\"confirmPassword\" \r\n                                label=\"Confirm password\" \r\n                                type=\"password\" \r\n                                variant=\"outlined\" \r\n                                onChange={handleChange}\r\n                            />\r\n                            <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.button}\r\n                                endIcon={<RegistorIcon/>}\r\n                                onClick={handleRegistor}\r\n                                type=\"submit\">\r\n                                Registor\r\n                            </Button>\r\n                            {errors.login && !errors.email && (\r\n                                <Typography variant=\"body2\" \r\n                                    className={classes.customError}>\r\n                                        {errors.login}\r\n                                </Typography>\r\n                            )}\r\n                            {props.UI.loading && <div className={classes.spinner}> <Spinner/></div>}\r\n                        </form>\r\n\r\n                        <Typography variant=\"h6\" \r\n                            align=\"center\">\r\n                            Had an account? \r\n                                <IconButton aria-label=\"Login\"\r\n                                    color=\"primary\" \r\n                                    onClick={clickLogin}>\r\n                                        <LoginIcon/>\r\n                                </IconButton>\r\n                        </Typography>\r\n                    </>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Check type of data\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    registor: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    loginUser,\r\n    registor\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Login);\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst StyleBanner = styled.header`\r\n    min-height: 40vh;\r\n    background: url(${props => props.img}) center/cover no-repeat;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default StyleBanner;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles(theme => ({\r\n    banner: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Banner = () => {\r\n    const classes = styles();\r\n\r\n    return (\r\n        <div className={classes.banner}>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n    backgroundColor: \"transparent\",\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: 400\r\n    },\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n    // Change when screen down 600\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n        width: 110,\r\n        height: 110,\r\n    }\r\n  },\r\n  img: {\r\n    margin: 'auto',\r\n    display: 'block',\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n  content: {\r\n      textAlign: \"justify\"\r\n  },\r\n  contentContainer: {\r\n      marginTop: \"auto\",\r\n      marginBottom: \"auto\"\r\n  }\r\n}));\r\n\r\nconst HomeDescriptionItem = ({ content, img, direction }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper className={classes.paper} \r\n        elevation={0}>\r\n\r\n          <Grid container \r\n            spacing={2} \r\n            direction={direction}>\r\n\r\n              <Grid item \r\n                xs={12} sm={5} \r\n                align=\"center\">\r\n                  {img}\r\n              </Grid>\r\n\r\n              <Grid item \r\n                xs={12} sm={7}  \r\n                className={classes.contentContainer}>\r\n                    <Typography variant=\"body2\" \r\n                      className={classes.content}>\r\n                        {content}\r\n                    </Typography>\r\n              </Grid>\r\n\r\n          </Grid>\r\n          \r\n      </Paper>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeDescriptionItem;","import React from 'react';\r\n// MUI\r\nimport {Grid} from '@material-ui/core';\r\n// Components\r\nimport HomeDescriptionItem from './HomeDescriptionItem';\r\n// Icons\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport ForumIcon from \"@material-ui/icons/Forum\";\r\n\r\nconst dataSet = {\r\n    data:[\r\n        {\r\n            content: \"Lorem ipsum dolor, it amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <RoomIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consecttur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <PaymentIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n        {\r\n            content: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ipsam voluptas sapiente, deserunt minima laudantium possimus.\",\r\n            img: <ForumIcon style={{width: 100, height: 100}}/>,\r\n            direction: \"row\"\r\n        },\r\n    ]\r\n}\r\n\r\nconst HomeDescription = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                    {dataSet.data.map(item => (\r\n                        <Grid item \r\n                            xs={12} lg={4} \r\n                            key={item.content}>\r\n                                <HomeDescriptionItem content={item.content} \r\n                                    direction={item.direction} \r\n                                    img={item.img}\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default HomeDescription;\r\n","import React, { useEffect } from 'react';\r\n\r\n// MUI\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst AlertDialog = ({action, description, title, type, parent}) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n    if(type === \"update\") {\r\n        parent.setState({\r\n            ...parent.state,\r\n            submit: false\r\n        })\r\n    }\r\n  };\r\n\r\n  const handleYes = () => {\r\n    action();\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(type === \"update\") {\r\n          setOpen(true);\r\n      }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n        {type === \"delete\" ? (\r\n            <>\r\n                <Tooltip title=\"Delete\" placement=\"top\">\r\n                    <IconButton aria-label=\"delete\" \r\n                        color=\"secondary\" \r\n                        onClick={handleClickOpen}\r\n                        style={{width: \"15%\"}}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{color: \"red\"}} >{title}</DialogTitle>\r\n                    <DialogContent> \r\n                    <DialogContentText id=\"alert-dialog-description\" style={{color: \"black\"}}>\r\n                        {description}\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={handleYes} color=\"secondary\" autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        ) : (\r\n            <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\" style={{color: \"red\"}}>{title}</DialogTitle>\r\n                    <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\" style={{color: \"black\"}}>\r\n                        {description}\r\n                    </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={handleYes} color=\"secondary\" autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n        )}    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AlertDialog;","import React, { useState, useEffect } from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {TextField} from '@material-ui/core';\r\n\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    map: {\r\n        height: \"300px\",\r\n        marginTop: \"100px\"\r\n    }\r\n}));\r\n\r\nconst google = window.google;\r\n\r\nconst AutoAddress = ({ parent, address }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        initMap();\r\n    });\r\n\r\n    // Google places address\r\n    function initMap() {\r\n        let map;\r\n        if(address) {\r\n          map = new google.maps.Map(document.getElementById(\"map\"), {\r\n            center: { lat: address.lat, lng: address.lng },\r\n            zoom: 13,\r\n          });\r\n        } else {\r\n          map = new google.maps.Map(document.getElementById(\"map\"), {\r\n            center: { lat: -33.8688, lng: 151.2195 },\r\n            zoom: 13,\r\n          });\r\n        }\r\n       \r\n        const card = document.getElementById(\"pac-card\");\r\n        const input = document.getElementById(\"pac-input\");\r\n        map.controls[google.maps.ControlPosition.TOP_RIGHT].push(card);\r\n        const autocomplete = new google.maps.places.Autocomplete(input);\r\n        // Bind the map's bounds (viewport) property to the autocomplete object,\r\n        // so that the autocomplete requests use the current map bounds for the\r\n        // bounds option in the request.\r\n        autocomplete.bindTo(\"bounds\", map);\r\n        // Set the data fields to return when the user selects a place.\r\n        autocomplete.setFields([\"address_components\", \"geometry\", \"icon\", \"name\"]);\r\n        const infowindow = new google.maps.InfoWindow();\r\n        const infowindowContent = document.getElementById(\"infowindow-content\");\r\n        infowindow.setContent(infowindowContent);\r\n        let marker;\r\n        if(address) {\r\n          marker = new google.maps.Marker({\r\n            map,\r\n            anchorPoint: new google.maps.Point(0, -29),\r\n            position: { lat: address.lat, lng: address.lng}\r\n          });\r\n        } else {\r\n          marker = new google.maps.Marker({\r\n            map,\r\n            anchorPoint: new google.maps.Point(0, -29),\r\n          });\r\n        }\r\n        autocomplete.addListener(\"place_changed\", () => {\r\n          infowindow.close();\r\n          marker.setVisible(false);\r\n          const place = autocomplete.getPlace();\r\n\r\n          if (!place.geometry) {\r\n            // User entered the name of a Place that was not suggested and\r\n            // pressed the Enter key, or the Place Details request failed.\r\n            window.alert(\"No details available for input: '\" + place.name + \"'\");\r\n            return;\r\n          }\r\n\r\n          // If the place has a geometry, then present it on a map.\r\n          if (place.geometry.viewport) {\r\n            map.fitBounds(place.geometry.viewport);\r\n          } else {\r\n            map.setCenter(place.geometry.location);\r\n            map.setZoom(17); // Why 17? Because it looks good.\r\n          }\r\n          marker.setPosition(place.geometry.location);\r\n          marker.setVisible(true);\r\n\r\n          let address = \"\";\r\n\r\n          if (place.address_components) {\r\n            address = [\r\n              (place.address_components[0] &&\r\n                place.address_components[0].short_name) ||\r\n                \"\",\r\n              (place.address_components[1] &&\r\n                place.address_components[1].short_name) ||\r\n                \"\",\r\n              (place.address_components[2] &&\r\n                place.address_components[2].short_name) ||\r\n                \"\",\r\n            ].join(\" \");\r\n          }\r\n          infowindowContent.children[\"place-icon\"].src = place.icon;\r\n          infowindowContent.children[\"place-name\"].textContent = place.name;\r\n          infowindowContent.children[\"place-address\"].textContent = address;\r\n          infowindow.open(map, marker);\r\n\r\n          parent.setState({\r\n            ...parent.state,\r\n            address: { \r\n              name: input.value,\r\n              lat: marker.getPosition().lat(),\r\n              lng: marker.getPosition().lng()\r\n            }\r\n          })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n              <TextField \r\n                  name=\"address\" \r\n                  label=\"3. Address\" \r\n                  variant=\"standard\"  \r\n                  id=\"pac-input\"\r\n                  className={classes.content}\r\n                  placeholder={address && address.name}\r\n              />\r\n            <div id=\"map\" className={classes.map}></div>\r\n            <div id=\"infowindow-content\">\r\n                <img src=\"\" width=\"16\" height=\"16\" id=\"place-icon\" />\r\n                <span id=\"place-name\" className=\"title\"></span><br />\r\n                <span id=\"place-address\"></span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AutoAddress;","import { SET_RESTAURANTS, SET_RESTAURANT, FILTER_RESTAURANTS, DELETE_RESTAURANT, UPDATE_RESTAURANT, POST_RESTAURANT, \r\n    LOADING_DATA, STOP_LOADING_UI, LOADING_UI, SET_ERRORS, CLEAR_ERRORS } from '../types';\r\nimport axios from 'axios';\r\n\r\n// // Get all restaurants\r\nexport const getRestaurants = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/restaurants')\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_RESTAURANTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_RESTAURANTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Post a restaurant\r\nexport const postRestaurant = (newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.post('/restaurant', newData)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            dispatch({\r\n                type: POST_RESTAURANT,\r\n                payload: res.data\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\n\r\n// Delete a restaurant\r\nexport const deleteRestaurant = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/restaurant/delete/${id}`)\r\n        .then(() => {\r\n            dispatch({ type: DELETE_RESTAURANT, payload: id })\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\n//Update a restaurant\r\nexport const updateRestaurant = (id, newData) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.patch(`/restaurant/${id}`, newData)\r\n        .then(res => {\r\n            const result = {\r\n                restaurant : {\r\n                    ...res.data.restaurant,\r\n                    id: id,\r\n                },\r\n                message: \"Update successfully!\"\r\n            }\r\n            dispatch({\r\n                type: UPDATE_RESTAURANT,\r\n                payload: result\r\n            })\r\n            dispatch(clearErrors())\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: \"Update failed!\"\r\n            })\r\n        })  \r\n}\r\n\r\n//Filter\r\nexport const filter = (constraint) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/restaurantsFilter/${constraint}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FILTER_RESTAURANTS,\r\n                payload: res.data\r\n            })\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: FILTER_RESTAURANTS,\r\n                payload: []\r\n            })\r\n        })\r\n}\r\n\r\n// Load image\r\nexport const uploadImage = (formData, id) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI });\r\n    axios.post(`/restaurant/image/${id}`, formData)\r\n        .then(res => {\r\n            dispatch(getOne(id));\r\n            dispatch({ type: STOP_LOADING_UI });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const getOne = (id) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/restaurant/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: SET_RESTAURANT,\r\n                payload: res.data\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, CardMedia, Typography } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\nimport AlertDialog from '../AlertDialog/AlertDialog';\r\nimport AutoAddress from '../Autocomplete/AutoAddress';\r\n// Redux stuff\r\nimport { getOne, uploadImage, updateRestaurant } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst labels = {\r\n    0: 'Very bad',\r\n    1: 'Bad',\r\n    2: 'Need to improve',\r\n    3: 'Normal',\r\n    4: 'Good',\r\n    5: 'Excellent',\r\n  };  \r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n      width: '100%',\r\n    },\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '45%',\r\n  },\r\n  labelRating: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  resultRating: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  contentRating: {\r\n    display: \"flex\",\r\n    paddingLeft: \"1em\"\r\n  }\r\n});\r\n\r\nclass FormUpdate extends Component {\r\n    \r\n    state = {\r\n        name: \"\",\r\n        type: \"\",\r\n        visitDate: \"\",\r\n        price: 0,\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        message: \"\",\r\n        url: null,\r\n        uploadedImage: null,\r\n        errors: {},\r\n        valueService: 0,\r\n        hoverService: -1,\r\n        valueCleanliness: 0,\r\n        hoverCleanliness: -1,\r\n        valueFood: 0,\r\n        hoverFood: -1,\r\n        submit: false,\r\n        address: \"\"\r\n    }\r\n\r\n    // Set data initially\r\n    componentDidMount() {\r\n        const {restaurant} = this.props;\r\n        let positionRating = {};\r\n        for(var i = 0; i < 6; i++) {\r\n            if (restaurant.serviceRating === labels[i]) {\r\n                positionRating.service = i;\r\n            }\r\n            if (restaurant.cleanlinessRating === labels[i]) {\r\n                positionRating.cleanliness = i;\r\n            }\r\n            if (restaurant.foodQualityRating === labels[i]) {\r\n                positionRating.food = i;\r\n            }\r\n\r\n            if(i === 5) {\r\n                this.setState({\r\n                    ...this.state,\r\n                    name: restaurant.name,\r\n                    type: restaurant.type,\r\n                    visitDate: restaurant.visitDate,\r\n                    price: restaurant.price,\r\n                    reporter: restaurant.reporter,\r\n                    notes: restaurant.notes,\r\n                    url: restaurant.url,\r\n                    valueService: positionRating.service,\r\n                    hoverService: positionRating.service,\r\n                    valueCleanliness: positionRating.cleanliness,\r\n                    hoverCleanliness: positionRating.cleanliness,\r\n                    valueFood: positionRating.food,\r\n                    hoverFood: positionRating.food,\r\n                    address: restaurant.address\r\n                });\r\n            }\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    // Get data from typing\r\n    handleChange = (event) => {\r\n        if(event.target.value.length > 30) {\r\n            event.target.value = event.target.value.slice(0, 30);\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name] : event.target.value\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name] : event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle change rating\r\n    handleChangeRating = (event, newValue) => {\r\n        if(newValue) {\r\n            switch(event.target.name) {\r\n                case \"serviceRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueService: newValue\r\n                    });\r\n                    break;\r\n                case \"cleanlinessRating\": \r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueCleanliness: newValue\r\n                    });\r\n                    break;\r\n                case \"foodQualityRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        valueFood: newValue\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Handle change active rating\r\n    handleChangeActive = (event, newHover) => {\r\n        if(newHover !== -1) {\r\n            switch(event.target.name) {\r\n                case \"serviceRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverService: newHover\r\n                    });\r\n                    break;\r\n                case \"cleanlinessRating\": \r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverCleanliness: newHover\r\n                    });\r\n                    break;\r\n                case \"foodQualityRating\":\r\n                    this.setState({\r\n                        ...this.state,\r\n                        hoverFood: newHover\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }    \r\n\r\n    // Handle uploading\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        this.setState({\r\n            ...this.state,\r\n            uploadedImage: image\r\n        })\r\n    }\r\n\r\n    // Handle submitting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            submit: true\r\n        })\r\n    }\r\n    \r\n    handleUpdate = () => {\r\n\r\n        let errors = {};\r\n        // Check constraints\r\n        // TODO: create function\r\n        if(this.state.name === \"\") {\r\n            errors.name = \"Name is required!\"\r\n        } else \r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\"\r\n        }\r\n        if(this.state.visitDate === \"\") {\r\n            errors.visitDate = \"Visited date is required!\"\r\n        }\r\n        if(this.state.serviceRating === \"\") {\r\n            errors.serviceRating = \"Service rating is required!\"\r\n        }\r\n        if(this.state.cleanlinessRating === \"\") {\r\n            errors.cleanlinessRating = \"Cleanliness rating is required!\"\r\n        }\r\n        if(this.state.foodQualityRating === \"\") {\r\n            errors.foodQualityRating = \"Food quality rating is required!\"\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\"\r\n        }\r\n        if(this.state.reporter === \"\") {\r\n            errors.reporter = \"Reporter is required!\"\r\n        }\r\n\r\n        if(errors.type || errors.name || errors.price || errors.reporter || errors.visitDate ||\r\n            errors.serviceRating || errors.cleanlinessRating || errors.foodQualityRating){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const totalRating = Math.round((this.state.valueService + this.state.valueFood + this.state.valueCleanliness) / 3);\r\n\r\n            const updateData = {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                visitDate: this.state.visitDate,\r\n                serviceRating: labels[this.state.valueService],\r\n                cleanlinessRating: labels[this.state.valueCleanliness],\r\n                foodQualityRating: labels[this.state.valueFood],\r\n                totalRating: labels[totalRating],\r\n                price: this.state.price,\r\n                reporter: this.props.user.credentials.email,\r\n                notes: this.state.notes,\r\n                address: this.state.address,\r\n                url: this.state.url\r\n            };\r\n\r\n            // Check if user change image\r\n            if(this.state.uploadedImage !== null) {\r\n                const formData = new FormData();\r\n                formData.append('image', this.state.uploadedImage, this.state.uploadedImage.name);\r\n                this.props.uploadImage(formData, this.props.restaurant.id);\r\n                this.props.history.push(\"/home\");\r\n            }\r\n           \r\n            // Start updating\r\n            this.props.updateRestaurant(this.props.restaurant.id, updateData);\r\n            this.props.history.push(\"/home\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        // Check if data load completely\r\n        if(this.props.data.loading) {\r\n            return (\r\n                <Spinner/>\r\n            )\r\n        } else {\r\n            return (\r\n                <>\r\n                <form className={classes.form} \r\n                    noValidate \r\n                    autoComplete=\"off\" \r\n                    onSubmit={this.handleSubmit}>\r\n                         {this.state.errors.name ? (\r\n                            <TextField error \r\n                                name=\"name\" \r\n                                helperText={this.state.errors.name} \r\n                                required label=\"1. Name\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange}    \r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"name\" \r\n                                required \r\n                                label=\"1. Name\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange}\r\n                                value={this.state.name}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.type ? (\r\n                            <TextField name=\"type\" \r\n                                error \r\n                                helperText={this.state.errors.type} \r\n                                required \r\n                                label=\"2. Type\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"type\" \r\n                                required \r\n                                label=\"2. Type\" \r\n                                variant=\"standard\" \r\n                                onChange={this.handleChange} \r\n                                value={this.state.type}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.visitDate ? (\r\n                            <TextField error \r\n                                name=\"visitDate\" \r\n                                helperText={this.state.errors.visitDate} \r\n                                required \r\n                                label=\"3. Visited date\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange}\r\n                                type=\"date\"\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"visitDate\" \r\n                                required \r\n                                label=\"3. Visited date\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange}\r\n                                value={this.state.visitDate}\r\n                                type=\"date\"\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.price ? (\r\n                            <TextField name=\"price\" \r\n                                error \r\n                                helperText={this.state.errors.price}  \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"4. Price\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"price\" \r\n                                type=\"number\" \r\n                                required \r\n                                label=\"4. Price\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.price}\r\n                            />\r\n                        )}\r\n\r\n                        {this.state.errors.reporter ? (\r\n                            <TextField name=\"reporter\" \r\n                                error \r\n                                helperText={this.state.errors.reporter} \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        ) : (\r\n                            <TextField name=\"reporter\" \r\n                                required \r\n                                label=\"5. Reporter\" \r\n                                variant=\"standard\"  \r\n                                onChange={this.handleChange} \r\n                                value={this.state.reporter}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField name=\"notes\" \r\n                            label=\"6. Notes\" \r\n                            variant=\"standard\"  \r\n                            onChange={this.handleChange} \r\n                            value={this.state.notes && this.state.notes}                           \r\n                        />\r\n\r\n                        <label htmlFor=\"serviceRating\" className={classes.labelRating}>\r\n                            7. Service rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"serviceRating\"\r\n                                value={this.state.valueService}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueService !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverService !== -1 ? \r\n                                        this.state.hoverService : \r\n                                        this.state.valueService]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n\r\n                        <label htmlFor=\"cleanlinessRating\" className={classes.labelRating}>\r\n                            8. Cleanliness rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"cleanlinessRating\"\r\n                                value={this.state.valueCleanliness}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueCleanliness !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverCleanliness !== -1 ? \r\n                                        this.state.hoverCleanliness : \r\n                                        this.state.valueCleanliness]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n                        \r\n                        <label htmlFor=\"foodQualityRating\" className={classes.labelRating}>\r\n                            9. Food quality rating: \r\n                        </label>\r\n                        <span className={classes.contentRating}>\r\n                            <Rating\r\n                                name=\"foodQualityRating\"\r\n                                value={this.state.valueFood}\r\n                                precision={1}\r\n                                onChange={this.handleChangeRating}\r\n                                onChangeActive={this.handleChangeActive}\r\n                            />\r\n                            {this.state.valueFood !== null && \r\n                                <Box ml={2} className={classes.resultRating}>\r\n                                    {labels[this.state.hoverFood !== -1 ? \r\n                                        this.state.hoverFood : \r\n                                        this.state.valueFood]}\r\n                                </Box>\r\n                            }\r\n                        </span>\r\n\r\n                        <AutoAddress parent={this} address={this.state.address}/>\r\n\r\n                        {this.state.url !== null && (\r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                image={this.state.url}\r\n                                onClick={this.handleMediaClick}\r\n                            />\r\n                        )}\r\n\r\n                        <TextField type=\"file\" \r\n                            name=\"image\" \r\n                            onChange={this.handleUpload}\r\n                        />\r\n\r\n                        <Button type=\"submit\" \r\n                            variant=\"contained\" \r\n                            color=\"primary\">\r\n                                Update\r\n                        </Button>\r\n                        {/* Message and spinner */}\r\n                        {this.props.data.loading && <Spinner/>}\r\n                        {this.props.UI.errors && \r\n                            <h2>\r\n                                Update failed!\r\n                            </h2>}\r\n\r\n                </form>\r\n                \r\n                {this.state.submit === true && (\r\n                     <AlertDialog parent={this} action={this.handleUpdate.bind(this)} description=\"Do you want to update this rating?\" title=\"Update alert!!!\" type=\"update\" />\r\n                )}\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n// Check type of data\r\nFormUpdate.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    getOne: PropTypes.func.isRequired,\r\n    updateRestaurant: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getOne,\r\n    updateRestaurant,\r\n    uploadImage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormUpdate));","import React, {useState} from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, IconButton, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormUpdate from '../Forms/FormUpdate';\r\n// Icon\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\"\r\n  }\r\n}));\r\n\r\nconst ModalUpdate = ({restaurant, history}) => {\r\n  const classes = useStyles();\r\n  //Set state\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Update an apartment\r\n        </Typography>\r\n      <FormUpdate restaurant={restaurant} history={history}/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Update and note\" placement=\"top\">\r\n        <IconButton aria-label=\"update\" \r\n          color=\"primary\" \r\n          onClick={handleOpen} style={{width: \"15%\"}}>\r\n            <UpdateIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        style={{zIndex: 5}}\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalUpdate;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Passers,\r\n  share, \r\n  P\r\n} from \"prop-passer\";\r\n\r\nimport {\r\n  FacebookShareButton,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  EmailIcon\r\n} from \"react-share\"; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\", \r\n    display: \"flex\", \r\n    position: \"absolute\", \r\n    justifyContent: \"flex-end\", \r\n    paddingRight: \"4%\", \r\n    marginTop: \"-15%\"\r\n  },\r\n  [theme.breakpoints.only(\"sm\")]: {\r\n    root: {\r\n      marginTop: \"-10%\"\r\n    }\r\n  },\r\n  emailIcon: {\r\n    marginLeft: \"20%\"\r\n  }\r\n}));\r\n\r\nconst SocialShare = (props) => {\r\n  const { title, url } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const ShareList = Passers(\r\n    share(\r\n      <P\r\n        url={url}\r\n        className=\"network__share-button\"\r\n      />\r\n    )\r\n  )({ className: \"network\" })(\"li\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ShareList>\r\n        <FacebookShareButton quote={title}>\r\n          <FacebookIcon\r\n            size={\"1.5rem\"}\r\n            round\r\n          />\r\n        </FacebookShareButton>\r\n\r\n        <EmailShareButton subject={title} body=\"body\" className={classes.emailIcon}>\r\n          <EmailIcon size={\"1.5rem\"} round />\r\n        </EmailShareButton>\r\n      </ShareList>\r\n    </div>\r\n  );\r\n}\r\n\r\nSocialShare.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SocialShare;\r\n","import React, {useState} from 'react';\r\n// Date handler\r\nimport moment from 'moment';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n// Components\r\nimport ModalUpdate from '../Modals/ModalUpdate';\r\nimport AlertDialog from '../AlertDialog/AlertDialog';\r\n// icons\r\nimport SocialShare from '../SocialShare/SocialShare';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"500px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    position: \"relative\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardActions: {\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  cardContent: {\r\n    height: \"250px\"\r\n  }\r\n}));\r\n\r\nconst CardRestaurant = ({restaurant, flag, deleteRestaurant, history}) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [url, setUrl] = useState(`${restaurant.url}`); //Change url share here\r\n  const [title, setTitle] = useState('');\r\n\r\n  // Delete apartment\r\n  const handleDelete = () => {\r\n    deleteRestaurant(restaurant.id);\r\n  }\r\n\r\n  // Check apartment card shows for which page\r\n  if(restaurant) {\r\n    return (\r\n      <Card className={classes.root} \r\n        raised>\r\n        {/* Header */}\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"/>\r\n          }\r\n          title={restaurant.name}\r\n          subheader={moment(restaurant.dateCreate).format('DD/MM/YYYY')}\r\n        />\r\n        <SocialShare url={url} title={title}/>\r\n        {/* Picture */}\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={restaurant.url}\r\n        />\r\n        {/* Content */}\r\n        <CardContent className={classes.cardContent}>\r\n\r\n          <Typography variant=\"h6\">\r\n            Details\r\n          </Typography>\r\n            \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Type: {restaurant.type}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Visited date: {moment(restaurant.visitDate).format('DD/MM/YYYY')}\r\n          </Typography>\r\n          \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Location: {restaurant.address ? restaurant.address.name : \"No information\"}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Price: {restaurant.price}\r\n          </Typography>\r\n\r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Total rating: {restaurant.totalRating}\r\n          </Typography>\r\n    \r\n          <Typography variant=\"subtitle1\">\r\n          &nbsp;• Reporter: {restaurant.reporter}\r\n          </Typography>\r\n          \r\n          {restaurant.notes !== \"Empty\" && (\r\n            <Typography variant=\"subtitle2\" \r\n              color=\"secondary\">\r\n                &nbsp;<i>*Note: {restaurant.notes}</i>\r\n            </Typography>\r\n          )}\r\n\r\n        </CardContent>\r\n\r\n        {/* Actions */}\r\n        {flag === \"restaurants\" && (\r\n          <CardActions className={classes.cardActions} \r\n                disableSpacing>\r\n\r\n            {/* <SocialShare url={url} title={title}/> */}\r\n\r\n            <ModalUpdate restaurant={restaurant} history={history}/>\r\n\r\n            \r\n            <AlertDialog action={handleDelete.bind(this)} type=\"delete\" description=\"Do you want to delete this rating?\" title=\"Delete alert!!!\"/>\r\n\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardRestaurant;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst HomeRestaurant = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    New rating restaurant\r\n            </Typography>\r\n            <br/>\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show restaurants */}\r\n                    {props.restaurants.map ? props.restaurants.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4}   \r\n                            className={classes.hover} \r\n                            key={restaurant.id}>\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"home\"\r\n                                />\r\n                        </Grid>\r\n                    )) : (\r\n                        <Grid item xs={12}>\r\n                            <Typography variant=\"h5\" align=\"center\">\r\n                                No existed rating restaurant \r\n                            </Typography>\r\n                        </Grid>\r\n                    )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeRestaurant;\r\n","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography} from '@material-ui/core';\r\n// Components\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: \"#3f51b5\",\r\n        padding: \"2%\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    title: {\r\n        color: \"white\"\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    }\r\n  }));\r\n  \r\nconst SearchResult = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\"\r\n                className={classes.title}>\r\n                    Search result\r\n            </Typography>\r\n\r\n            <br/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\">\r\n\r\n                    {props.loading && <Spinner/>}\r\n\r\n                    {/* Show apartment */}\r\n                    {props.restaurantsFilter.length !== 0 && props.restaurantsFilter.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={restaurant.id}>\r\n\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"restaurants\"\r\n                                />\r\n\r\n                        </Grid>\r\n                    ))}\r\n\r\n                    {props.restaurantsFilter.length === 0 && \r\n                        <h3 style={{\r\n                            width: \"100%\",\r\n                            textAlign: \"center\", \r\n                            color: \"white\"\r\n                            }}>\r\n                                No matched results\r\n                        </h3>}\r\n            </Grid>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from 'react';\r\n// MUI\r\nimport { Divider as DividerMUI } from '@material-ui/core';\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <DividerMUI style={{marginTop: \"3rem\", marginBottom: \"3rem\"}}/>\r\n    )\r\n}\r\n\r\nexport default Divider;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport HomeDescription from '../components/HomeDescription/HomeDescription';\r\nimport HomeRestaurant from '../components/HomeRestaurant/HomeRestaurant';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getRestaurants } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Home extends Component {\r\n\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getRestaurants();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/homeBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n                \r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult restaurantsFilter={this.props.data.restaurantsFilter} \r\n                            loading={this.props.data.loading}\r\n                        />\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <HomeDescription/>\r\n\r\n                <Divider/>\r\n\r\n                <HomeRestaurant restaurants={this.props.data.restaurants} \r\n                    loading={this.props.data.loading}\r\n                />\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nHome.propTypes = {\r\n    getRestaurants: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getRestaurants\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Home);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// MUI\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {TextField, Button, Typography} from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Box from '@material-ui/core/Box';\r\n//Components\r\nimport Spinner from '../Spinner/Spinner';\r\nimport AutoAddress from '../Autocomplete/AutoAddress';\r\n// Redux stuff\r\nimport { postRestaurant, uploadImage } from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nconst labels = {\r\n  0: 'Very bad',\r\n  1: 'Bad',\r\n  2: 'Need to improve',\r\n  3: 'Normal',\r\n  4: 'Good',\r\n  5: 'Excellent',\r\n};\r\n\r\n// CSS-in-react\r\nconst styles = (theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n  },\r\n  customError: {\r\n    color: \"red\",\r\n    textAlign: \"center\",\r\n    marginTop: 10\r\n  },\r\n  labelRating: {\r\n    fontSize: \"1rem\",\r\n  },\r\n  resultRating: {\r\n    fontWeight: \"bold\"\r\n  },\r\n  contentRating: {\r\n    display: \"flex\",\r\n    paddingLeft: \"1em\"\r\n  }\r\n});\r\n\r\nclass FormAdd extends Component {\r\n    state = {\r\n        name: \"\",\r\n        type: \"\",\r\n        visitDate: \"\",\r\n        price: 0,\r\n        serviceRating: \"\",\r\n        cleanlinessRating: \"\",\r\n        foodQualityRating: \"\",\r\n        reporter: \"\",\r\n        notes: \"Empty\",\r\n        url: \"\",\r\n        errors: {},\r\n        valueService: 0,\r\n        hoverService: -1,\r\n        valueCleanliness: 0,\r\n        hoverCleanliness: -1,\r\n        valueFood: 0,\r\n        hoverFood: -1,\r\n        address: \"No information\"\r\n    }\r\n\r\n    // Get errors after adding\r\n    componentWillReceiveProps() {\r\n        this.setState({\r\n            ...this.state,\r\n            message: this.props.data.message\r\n        })\r\n        if(this.props.data.message === \"Loaded image\") {\r\n            \r\n        }\r\n    }\r\n\r\n    // Get data from typing to state\r\n    handleChange = (event) => {\r\n        if(event.target.value.length > 30) {\r\n            event.target.value = event.target.value.slice(0, 30);\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name] : event.target.value\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                [event.target.name] : event.target.value\r\n            });\r\n        }\r\n    }\r\n\r\n    // Handle change rating\r\n    handleChangeRating = (event, newValue) => {\r\n        switch(event.target.name) {\r\n            case \"serviceRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    valueService: newValue\r\n                });\r\n                break;\r\n            case \"cleanlinessRating\": \r\n                this.setState({\r\n                    ...this.state,\r\n                    valueCleanliness: newValue\r\n                });\r\n                break;\r\n            case \"foodQualityRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    valueFood: newValue\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Handle change active rating\r\n    handleChangeActive = (event, newHover) => {\r\n        switch(event.target.name) {\r\n            case \"serviceRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverService: newHover\r\n                });\r\n                break;\r\n            case \"cleanlinessRating\": \r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverCleanliness: newHover\r\n                });\r\n                break;\r\n            case \"foodQualityRating\":\r\n                this.setState({\r\n                    ...this.state,\r\n                    hoverFood: newHover\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Upload image\r\n    handleUpload = (e) => {\r\n        e.preventDefault();\r\n        const image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData, this.props.data.restaurants[this.props.data.restaurants.length-1].restaurant.id);\r\n    }\r\n\r\n    // Handle submitting\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let errors = {\r\n            count: 0\r\n        };\r\n        // Check constraints\r\n        if(this.state.name === \"\") {\r\n            errors.name = \"Name is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.type === \"\") {\r\n            errors.type = \"Type is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.visitDate === \"\") {\r\n            errors.visitDate = \"Visited date is required!\";\r\n            errors.count += 1;\r\n        }\r\n        if(this.state.price === 0) {\r\n            errors.price = \"Price is required!\";\r\n            errors.count += 1;\r\n        }\r\n\r\n        if(errors.count > 0){\r\n            this.setState({\r\n                ...this.state,\r\n                errors\r\n            })\r\n        } else {\r\n            const totalRating = Math.round((this.state.valueService + this.state.valueFood + this.state.valueCleanliness) / 3);\r\n\r\n            const newData = {\r\n                name: this.state.name,\r\n                type: this.state.type,\r\n                visitDate: this.state.visitDate,\r\n                serviceRating: labels[this.state.valueService],\r\n                cleanlinessRating: labels[this.state.valueCleanliness],\r\n                foodQualityRating: labels[this.state.valueFood],\r\n                totalRating: labels[totalRating],\r\n                price: this.state.price,\r\n                reporter: this.props.user.credentials.email,\r\n                notes: this.state.notes,\r\n                createdDate: new Date().toISOString(),\r\n                address: this.state.address\r\n            };\r\n            // Start adding\r\n            this.props.postRestaurant(newData);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n  \r\n        const {classes} = this.props;\r\n        if(this.props.data.message === \"Loaded image\") {\r\n            this.props.closeModel();\r\n            this.props.history.push('/home');\r\n        }\r\n        return (\r\n            <form className={classes.form} \r\n                noValidate \r\n                autoComplete=\"off\" \r\n                onSubmit={this.handleSubmit}>\r\n\r\n                    {this.state.errors.name ? (\r\n                        <TextField error \r\n                            name=\"name\" \r\n                            helperText={this.state.errors.name} \r\n                            required label=\"1. Name\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}    \r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"name\" \r\n                            required \r\n                            label=\"1. Name\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.type ? (\r\n                        <TextField error \r\n                            name=\"type\" \r\n                            helperText={this.state.errors.type} \r\n                            required label=\"2. Type\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}    \r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"type\" \r\n                            required \r\n                            label=\"2. Type\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.visitDate ? (\r\n                        <TextField error \r\n                            name=\"visitDate\" \r\n                            helperText={this.state.errors.visitDate} \r\n                            required \r\n                            label=\"3. Visited date\" \r\n                            variant=\"standard\"  \r\n                            onChange={this.handleChange}\r\n                            type=\"date\"\r\n                            InputLabelProps={{shrink: true}}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"visitDate\" \r\n                            required \r\n                            label=\"3. Visited date\" \r\n                            variant=\"standard\"  \r\n                            type=\"date\"\r\n                            onChange={this.handleChange}\r\n                            InputLabelProps={{shrink: true}}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.errors.price ? (\r\n                        <TextField error \r\n                            name=\"price\" \r\n                            type=\"number\" \r\n                            helperText={this.state.errors.price} \r\n                            required \r\n                            label=\"4. Price\" \r\n                            variant=\"standard\" \r\n                            onChange={this.handleChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField name=\"price\" \r\n                            type=\"number\" \r\n                            required \r\n                            label=\"4. Price\" \r\n                            variant=\"standard\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    )}\r\n\r\n                    <label htmlFor=\"serviceRating\" className={classes.labelRating}>\r\n                        5. Service rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"serviceRating\"\r\n                            value={this.state.valueService}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueService !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverService !== -1 ? \r\n                                    this.state.hoverService : \r\n                                    this.state.valueService]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n\r\n                    <label htmlFor=\"cleanlinessRating\" className={classes.labelRating}>\r\n                        6. Cleanliness rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"cleanlinessRating\"\r\n                            value={this.state.valueCleanliness}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueCleanliness !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverCleanliness !== -1 ? \r\n                                    this.state.hoverCleanliness : \r\n                                    this.state.valueCleanliness]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n                    \r\n                    <label htmlFor=\"foodQualityRating\" className={classes.labelRating}>\r\n                        7. Food quality rating: \r\n                    </label>\r\n                    <span className={classes.contentRating}>\r\n                        <Rating\r\n                            name=\"foodQualityRating\"\r\n                            value={this.state.valueFood}\r\n                            precision={1}\r\n                            onChange={this.handleChangeRating}\r\n                            onChangeActive={this.handleChangeActive}\r\n                        />\r\n                        {this.state.valueFood !== null && \r\n                            <Box ml={2} className={classes.resultRating}>\r\n                                {labels[this.state.hoverFood !== -1 ? \r\n                                    this.state.hoverFood : \r\n                                    this.state.valueFood]}\r\n                            </Box>\r\n                        }\r\n                    </span>\r\n\r\n                    <AutoAddress parent={this}/>\r\n\r\n                    <Button type=\"submit\" \r\n                        variant=\"contained\" \r\n                        color=\"primary\">\r\n                            Create information\r\n                    </Button>\r\n                    {/* Message and spinner */}\r\n                    {this.state.message && (\r\n                        <>\r\n                            <Typography>\r\n                                Add restaurant image:\r\n                            </Typography>\r\n                            <TextField type=\"file\" \r\n                                name=\"image\" \r\n                                onChange={this.handleUpload}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    {this.props.data.message === \"Loaded image\" && (\r\n                        <Typography variant=\"body2\" \r\n                            className={classes.customError}>\r\n                                {this.props.data.message}\r\n                        </Typography>\r\n                    )}\r\n                    {this.props.data.loading && <Spinner/>}\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n// Check type of data\r\nFormAdd.propTypes = {\r\n    uploadImage: PropTypes.func.isRequired,\r\n    postRestaurant: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    user: state.user,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    postRestaurant,\r\n    uploadImage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(FormAdd));","import React, {useState} from 'react';\r\n//MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Tooltip, Typography } from '@material-ui/core';\r\n// Components\r\nimport FormAdd from '../Forms/FormAdd';\r\n//Icon\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 500,\r\n    height: 700,\r\n    overflow: \"scroll\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: `translate(-50%, -50%)`,\r\n    // Change when screen dowm 960\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 300,\r\n      height: 500,\r\n    }\r\n  },\r\n  addIcon: {\r\n    width: \"60%\",\r\n    height: \"60%\",\r\n    margin: \"20%\",\r\n  }\r\n}));\r\n\r\nconst ModalAdd = (props) => {\r\n  const classes = useStyles();\r\n\r\n  // Set state\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // Close and open modal\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Modal body\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <Typography variant=\"h4\" \r\n        align=\"center\">\r\n          Create a rating restaurant\r\n      </Typography>\r\n      <FormAdd closeModel={handleClose} history={props.history}/>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      <Tooltip title=\"Add more\">\r\n        <AddIcon className={classes.addIcon} \r\n          onClick={handleOpen}\r\n        />\r\n      </Tooltip>\r\n      \r\n      <Modal\r\n        style={{zIndex: 5}}\r\n        open={open}\r\n        onClose={handleClose}>\r\n          {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalAdd;","import React from 'react';\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Typography, Tooltip} from '@material-ui/core';\r\n// Components\r\nimport Spinner from '../Spinner/Spinner';\r\nimport CardRestaurant from \"../CardRestaurant/CardRestaurant\";\r\nimport ModalAdd from \"../Modals/ModalAdd\";\r\nimport Divider from \"../Divider/Divider\";\r\n\r\n// CSS-in-react\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      margin: \"2%\"\r\n    },\r\n    divider: {\r\n        marginBottom: \"1rem\"\r\n    },\r\n    hover: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n          }\r\n    },\r\n    hoverAdd: {\r\n        '&:hover': {\r\n            opacity: 0.8,\r\n            cursor: \"pointer\"\r\n          }\r\n    },\r\n    container: {\r\n        maxHeight: \"1000px\",\r\n        width: \"90%\",\r\n        marginLeft: \"5%\",\r\n        marginRight: \"5%\",\r\n        overflow: \"auto\",\r\n    },\r\n    addIcon: {\r\n        width: \"40%\",\r\n        height: \"40%\",\r\n        margin: \"30%\"\r\n    }\r\n  }));\r\n  \r\nconst ListRestaurant = (props) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <Typography variant=\"h4\" \r\n                align=\"center\">\r\n                    List of rating restaurants\r\n            </Typography>\r\n\r\n            <Divider className={classes.divider}/>\r\n\r\n            <Grid container \r\n                className={classes.container} \r\n                spacing={3} \r\n                alignItems=\"center\"\r\n                >\r\n\r\n                    <Grid item \r\n                        xs={12} md={6} lg={4} \r\n                        className={classes.hoverAdd} \r\n                        style={{zIndex: 3}}>\r\n                            <Tooltip title=\"Add more\">\r\n                                <>\r\n                                    <ModalAdd history={props.history}/>\r\n                                </>\r\n                            </Tooltip>\r\n                    </Grid>\r\n\r\n                    {props.loading && <Spinner/>}\r\n                    {/* Show apartments */}\r\n                    {props.restaurants.map(restaurant => (\r\n                        <Grid item \r\n                            xs={12} md={6} lg={4} \r\n                            className={classes.hover} \r\n                            key={restaurant.id+Math.random()}\r\n                            style={{zIndex: 3}}>\r\n\r\n                                <CardRestaurant restaurant={restaurant} \r\n                                    flag=\"restaurants\" \r\n                                    deleteRestaurant={props.deleteRestaurant}\r\n                                    history={props.history}\r\n                                />\r\n                        </Grid>\r\n                    ))}\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListRestaurant;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// Components\r\nimport StyledBanner from \"../components/Banner/StyledBanner\";\r\nimport Banner from '../components/Banner/Banner';\r\nimport ListRestaurant from '../components/ListRestaurant/ListRestaurant';\r\nimport SearchResult from '../components/SearchResult/SearchResult';\r\nimport Divider from '../components/Divider/Divider';\r\n// Redux stuff\r\nimport { getRestaurants, deleteRestaurant } from '../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class Apartments extends Component {\r\n\r\n    // Get all apartments initially\r\n    componentDidMount() {\r\n        this.props.getRestaurants();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <StyledBanner img=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/restaurantBanner.jpg?alt=media\">\r\n                    <Banner/>\r\n                </StyledBanner>\r\n\r\n                <Divider/>\r\n\r\n                {/* Check show or hide search result */}\r\n                {this.props.app.state.search && (\r\n                    <>\r\n                        <SearchResult restaurantsFilter={this.props.data.restaurantsFilter}/>\r\n                        <Divider/>\r\n                    </>\r\n                )}\r\n\r\n                <ListRestaurant restaurants={this.props.data.restaurants} \r\n                    loading={this.props.data.loading} \r\n                    deleteRestaurant={this.props.deleteRestaurant.bind(this)}\r\n                    history={this.props.history}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// Check type of data\r\nApartments.propTypes = {\r\n    getRestaurants: PropTypes.func.isRequired,\r\n    deleteRestaurant: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI,\r\n    data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n    getRestaurants,\r\n    deleteRestaurant\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Apartments);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from \"react-router-dom\";\r\n// MUI\r\nimport clsx from 'clsx';\r\nimport {Drawer, CssBaseline, AppBar, Toolbar, \r\n  List, Typography, Divider, ListItem, ListItemIcon, \r\n  ListItemText, InputBase, IconButton} from \"@material-ui/core\";\r\nimport { fade, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\n// Redux stuff\r\nimport {getUserData} from '../../redux/actions/userActions';\r\nimport {filter} from '../../redux/actions/dataAction';\r\nimport { connect } from 'react-redux';\r\n// Icons\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n\r\n// Width of drawer menu\r\nconst drawerWidth = 240;\r\n\r\n// CSS-in-react\r\nconst styles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: 4,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex: 2\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    boxShadow: \"0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)\"\r\n  },\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\"\r\n  },\r\n  avatarSize: {\r\n    height: theme.spacing(7),\r\n    width: theme.spacing(7)\r\n  },\r\n  divider: {\r\n    background: \"blue\"\r\n  },\r\n  // All for search\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    // Add more when screen up 600\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '8ch',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch'\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  // Add more when screen up 960\r\n  [theme.breakpoints.up('md')]: {\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    appBar: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    }\r\n  },\r\n}));\r\n\r\nconst Nav = (props) => {\r\n\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n\r\n  // Set states\r\n  const [open, setOpen] = useState(false);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    //Delete variable on local storage\r\n    localStorage.removeItem('FBidToken');\r\n    localStorage.removeItem('userId');\r\n\r\n    // Get icon close on toolbar\r\n    const iconClose = document.getElementById('iconCloseDrawer');\r\n    // Click on it when log out\r\n    if(iconClose) {\r\n      iconClose.click();\r\n    }\r\n    \r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      login: false\r\n    });\r\n  }\r\n\r\n  // Open menu\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n\r\n    // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: true\r\n    });\r\n  };\r\n\r\n  // Close menu\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n\r\n     // Set to rerender the app\r\n    props.app.setState({\r\n      ...props.app,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  // Get width auto\r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  //Search\r\n  const handleChangeSearch = (e) => {\r\n    let constraint = e.target.value;\r\n    if(constraint !== \"\"){\r\n      props.filter(constraint.toLowerCase());\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: true\r\n      })\r\n    } else {\r\n      props.data.restaurantsFilter = [];\r\n\r\n       // Set to rerender the app\r\n      props.app.setState({\r\n        ...props.app,\r\n        search: false\r\n      })\r\n    }\r\n  }\r\n\r\n  // Use for rendering auto when screen size changes\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {/* Use to match the content to the app bar exactly */}\r\n      <CssBaseline /> \r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n          <Toolbar>\r\n            {/* Burger button */}\r\n            {window.innerWidth <= 960 && (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}>\r\n                  <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            {/* Title */}\r\n            <Grid container \r\n              justify=\"space-between\" \r\n              alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography variant=\"h5\" \r\n                    noWrap \r\n                    align=\"center\">\r\n                      i-Rate\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                  {/* Search field */}\r\n                  <div className={classes.search}>\r\n                    <div className={classes.searchIcon}>\r\n                      <SearchIcon />\r\n                    </div>\r\n                    <InputBase\r\n                      placeholder=\"Search…\"\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                      name=\"search\"\r\n                      onChange={handleChangeSearch}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n      </AppBar>\r\n      {/* Drawer */}\r\n      {window.innerWidth > 960 ? /* Drawer for laptop */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open >\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container\r\n                item xs={4}  \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\" \r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Typography>\r\n                      Hello, {props.user.credentials.email}\r\n                    </Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Restaurants\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/restaurants\" \r\n                          className={classes.navLink} \r\n                          key={text}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink} \r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      ) : /* Drawer for tablet */ (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n          anchor=\"left\"\r\n          open={open}>\r\n            <div className={classes.drawerHeader}>\r\n              <IconButton onClick={handleDrawerClose} id=\"iconCloseDrawer\">\r\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider className={classes.divider}/>\r\n            {/* User information */}\r\n            <Grid container \r\n              style={{padding: \"1rem\"}}>\r\n              <Grid container \r\n                item xs={4} \r\n                justify=\"center\" \r\n                alignItems=\"center\">\r\n                <Avatar alt=\"User avatar\" \r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/mobile-2ef47.appspot.com/o/avatar.png?alt=media\"\r\n                  className={classes.avatarSize}\r\n                />\r\n              </Grid>\r\n              <Grid container \r\n                item xs={8} \r\n                alignItems=\"center\">\r\n                <Grid item>\r\n                  <Typography>\r\n                    Hello, {props.user.credentials.email}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Divider className={classes.divider}/>\r\n            {/* Routes */}\r\n            <List>\r\n              {[\"Home\", \"Restaurants\"].map((text, index) => {\r\n                if(text === \"Home\") {\r\n                    return (\r\n                        <NavLink to=\"/home\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <NavLink to=\"/restaurants\" \r\n                          className={classes.navLink} \r\n                          key={text} \r\n                          onClick={handleDrawerClose}>\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>\r\n                                    <ApartmentIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={text}/>\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    )\r\n                }}\r\n              )}\r\n            </List>\r\n            <Divider className={classes.divider}/>\r\n            {/* Logout button */}\r\n            <List>\r\n              <div\r\n                className={classes.navLink}\r\n                onClick={handleLogout}>\r\n                  <ListItem button>\r\n                      <ListItemIcon>\r\n                          <LogoutIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Log out\"/>\r\n                  </ListItem>\r\n              </div>\r\n            </List>\r\n        </Drawer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n// Check type of data\r\nNav.propTypes = {\r\n  getUserData: PropTypes.func.isRequired,\r\n  filter: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired\r\n}\r\n// Get data from redux to props\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  data: state.data\r\n});\r\n// Get action from redux to props\r\nconst mapActionsToProps = {\r\n  getUserData,\r\n  filter\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(Nav);\r\n","import { SET_USER, SET_AUTHENTICATED, SET_UNAUTHENTICATED, LOADING_USER } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_AUTHENTICATED:\r\n            return{\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER: \r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                loading: false,\r\n                credentials: action.payload,\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {SET_RESTAURANTS, SET_RESTAURANT, DELETE_RESTAURANT, POST_RESTAURANT, LOADING_DATA, FILTER_RESTAURANTS, UPDATE_RESTAURANT} from '../types';\r\n\r\nconst initialState = {\r\n    restaurants: [],\r\n    restaurantsFilter: [],\r\n    restaurant: {},\r\n    loading: false,\r\n    message: \"\",\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    let index;\r\n    switch(action.type){\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case SET_RESTAURANTS:\r\n            return {\r\n                ...state,\r\n                restaurants: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_RESTAURANT: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: \"Loaded image\",\r\n                restaurant: action.payload\r\n            }\r\n        case FILTER_RESTAURANTS:\r\n            return {\r\n                ...state,\r\n                restaurantsFilter: action.payload,\r\n                loading: false\r\n            }\r\n        case POST_RESTAURANT:\r\n            state.restaurants.push(action.payload);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload.message\r\n            }\r\n        case UPDATE_RESTAURANT: \r\n            index = state.restaurants.findIndex(restaurant => restaurant.id === action.payload.restaurant.id);\r\n            state.restaurants.splice(index, 1);\r\n            state.restaurants.push(action.payload.restaurant);\r\n           \r\n            // Sort by date\r\n            state.restaurants.sort((a, b) => (a.dateCreate < b.dateCreate) ? 1 : (a.dateCreate === b.dateCreate) ? ((a.type > b.type) ? 1 : -1) : -1 )\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                restaurantsFilter: [],\r\n                message: action.payload.message\r\n            }\r\n        case DELETE_RESTAURANT:\r\n            index = state.restaurants.findIndex(restaurant => restaurant.id === action.payload);\r\n            state.restaurants.splice(index, 1);\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import { SET_ERRORS, SET_ERRORS_LOGIN, SET_ERRORS_REGISTOR, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload.message\r\n            };\r\n        case SET_ERRORS_LOGIN:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload.data.message\r\n            };\r\n        case SET_ERRORS_REGISTOR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload.data.message\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n    user: userReducer,\r\n    data: dataReducer,\r\n    UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    initialState, \r\n    compose(applyMiddleware(...middleware), \r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\nimport {BrowserRouter, Switch, Redirect, Route} from \"react-router-dom\";\nimport \"./App.css\";\n// MUI\nimport { withStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\n// Components\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Restaurants from \"./pages/Restaurants\";\nimport Nav from \"./components/Navigation/Nav\";\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n// Middleware\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\n\n// Set base url to connect API\naxios.defaults.baseURL= \"https://app-irate.herokuapp.com/\";\n\n// Token\nconst token = localStorage.FBidToken;\nif(token){\n  const decodedToken = jwtDecode(token);\n  if(decodedToken.exp * 1000 < Date.now()){\n    store.dispatch(logoutUser());\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData(localStorage.userId));\n  }\n}\n\n// Css-in-react\nconst styles = (theme) => ({\n  root: {\n    display: \"flex\",\n    overflow: \"hidden\"\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: \"rgba(0, 0, 0.08, 0.08)\",\n\n  },\n  // Add more when screen down 960\n  [theme.breakpoints.down('sm')]: {\n    content: {\n      flexGrow: 1,\n\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -240,\n    },\n    // Content should longer or shorter\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }\n  }\n});\n\nclass App extends Component {\n  \n  state = {\n    // open to assign to contentShift => false mean drawer close and then main content longer\n    open: false,\n    // Get from login\n    login: false \n  }\n  componentDidMount() {\n    // Check condition to re-render when login or logout\n    if(localStorage.FBidToken === undefined) {\n      this.setState({\n        ...this.state,\n        login: false\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        login: true\n      });\n    }\n  }\n\n  render() {\n    const {classes} = this.props;\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        {this.state.login ? (\n          <> \n            <div className={classes.root}>\n              {/* Assign this to setState in Nav => render 2 times*/}\n              <Nav app={this}/>\n              <main  className={clsx(classes.content, {\n                [classes.contentShift]: this.state.open,\n              })}>\n                <div className={classes.toolbar} />\n                  <Switch>\n                    <Redirect exact path=\"/\" to=\"/home\"/>\n                    <Redirect exact path=\"/login\" to=\"/home\"/>\n                    <Route path=\"/home\" exact component={(props) => <Home app={this} history={props.history}/>}/>\n                    <Route path=\"/restaurants\" exact component={(props) => <Restaurants app={this} history={props.history}/>}/>\n                  </Switch>\n              </main>\n            </div>\n          </>\n        ) : (\n          <>\n            <Redirect exact path=\"/\" to=\"/login\"/>\n            <Route path=\"/login\" exact render={(...props) => <Login login={this}/>} />\n            {/* <Route path=\"/test\" exact render={(...props) => <AutocompleteAddress/>} /> */}\n          </>\n        )}\n        </BrowserRouter>\n      </Provider> \n    )\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n\tReactDOM.render(\n\t\t<App />,\n\t  document.getElementById('root')\n\t);\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', () => {\n    renderReactDom();\n  }, false);\n} else {\n  renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}